
//! Autogenerated weights for `pallet_property_management`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 47.2.0
//! DATE: 2025-07-16, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `recrafter-Legion-5-16IRX9`, CPU: `Intel(R) Core(TM) i7-14650HX`
//! WASM-EXECUTION: `Compiled`, CHAIN: `None`, DB CACHE: 1024

// Executed Command:
// ./target/release/parachain-template-node
// benchmark
// pallet
// --pallet
// pallet_property_management
// --extrinsic
// *
// --steps
// 50
// --repeat
// 20
// --output
// ./pallets/property-management/src/weights.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::Weight};
use core::marker::PhantomData;

pub trait WeightInfo {
	fn add_letting_agent() -> Weight;
	fn letting_agent_deposit() -> Weight;
	fn add_letting_agent_to_location() -> Weight;
	fn set_letting_agent() -> Weight;
	fn distribute_income() -> Weight;
}

/// Weight functions for `pallet_property_management`.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	/// Storage: `Regions::RegionDetails` (r:1 w:0)
	/// Proof: `Regions::RegionDetails` (`max_values`: None, `max_size`: Some(87), added: 2562, mode: `MaxEncodedLen`)
	/// Storage: `Regions::LocationRegistration` (r:1 w:0)
	/// Proof: `Regions::LocationRegistration` (`max_values`: None, `max_size`: Some(46), added: 2521, mode: `MaxEncodedLen`)
	/// Storage: `PropertyManagement::LettingInfo` (r:1 w:1)
	/// Proof: `PropertyManagement::LettingInfo` (`max_values`: None, `max_size`: Some(10189), added: 12664, mode: `MaxEncodedLen`)
	fn add_letting_agent() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `305`
		//  Estimated: `13654`
		// Minimum execution time: 46_714_000 picoseconds.
		Weight::from_parts(71_024_000, 0)
			.saturating_add(Weight::from_parts(0, 13654))
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `PropertyManagement::LettingInfo` (r:1 w:1)
	/// Proof: `PropertyManagement::LettingInfo` (`max_values`: None, `max_size`: Some(10189), added: 12664, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Holds` (r:1 w:1)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(193), added: 2668, mode: `MaxEncodedLen`)
	fn letting_agent_deposit() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `360`
		//  Estimated: `13654`
		// Minimum execution time: 175_216_000 picoseconds.
		Weight::from_parts(227_143_000, 0)
			.saturating_add(Weight::from_parts(0, 13654))
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(3))
	}
	/// Storage: `PropertyManagement::LettingInfo` (r:1 w:1)
	/// Proof: `PropertyManagement::LettingInfo` (`max_values`: None, `max_size`: Some(10189), added: 12664, mode: `MaxEncodedLen`)
	/// Storage: `Regions::RegionDetails` (r:1 w:0)
	/// Proof: `Regions::RegionDetails` (`max_values`: None, `max_size`: Some(87), added: 2562, mode: `MaxEncodedLen`)
	/// Storage: `Regions::LocationRegistration` (r:1 w:0)
	/// Proof: `Regions::LocationRegistration` (`max_values`: None, `max_size`: Some(46), added: 2521, mode: `MaxEncodedLen`)
	fn add_letting_agent_to_location() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1648`
		//  Estimated: `13654`
		// Minimum execution time: 67_081_000 picoseconds.
		Weight::from_parts(75_179_000, 0)
			.saturating_add(Weight::from_parts(0, 13654))
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `RealEstateAsset::PropertyAssetInfo` (r:1 w:0)
	/// Proof: `RealEstateAsset::PropertyAssetInfo` (`max_values`: None, `max_size`: Some(62), added: 2537, mode: `MaxEncodedLen`)
	/// Storage: `PropertyManagement::LettingStorage` (r:1 w:1)
	/// Proof: `PropertyManagement::LettingStorage` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	/// Storage: `PropertyManagement::LettingInfo` (r:1 w:1)
	/// Proof: `PropertyManagement::LettingInfo` (`max_values`: None, `max_size`: Some(10189), added: 12664, mode: `MaxEncodedLen`)
	fn set_letting_agent() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `4371`
		//  Estimated: `13654`
		// Minimum execution time: 81_889_000 picoseconds.
		Weight::from_parts(99_533_000, 0)
			.saturating_add(Weight::from_parts(0, 13654))
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: `PropertyManagement::LettingStorage` (r:1 w:0)
	/// Proof: `PropertyManagement::LettingStorage` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Account` (r:2 w:2)
	/// Proof: `Assets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `AssetsHolder::BalancesOnHold` (r:1 w:0)
	/// Proof: `AssetsHolder::BalancesOnHold` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAsset::PropertyOwner` (r:1 w:0)
	/// Proof: `RealEstateAsset::PropertyOwner` (`max_values`: None, `max_size`: Some(8022), added: 10497, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAsset::PropertyAssetInfo` (r:1 w:0)
	/// Proof: `RealEstateAsset::PropertyAssetInfo` (`max_values`: None, `max_size`: Some(62), added: 2537, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAsset::PropertyOwnerToken` (r:250 w:0)
	/// Proof: `RealEstateAsset::PropertyOwnerToken` (`max_values`: None, `max_size`: Some(72), added: 2547, mode: `MaxEncodedLen`)
	/// Storage: `PropertyManagement::InvestorFunds` (r:250 w:250)
	/// Proof: `PropertyManagement::InvestorFunds` (`max_values`: None, `max_size`: Some(104), added: 2579, mode: `MaxEncodedLen`)
	fn distribute_income() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `24910`
		//  Estimated: `645740`
		// Minimum execution time: 3_484_679_000 picoseconds.
		Weight::from_parts(4_629_122_000, 0)
			.saturating_add(Weight::from_parts(0, 645740))
			.saturating_add(T::DbWeight::get().reads(508))
			.saturating_add(T::DbWeight::get().writes(254))
	}
}

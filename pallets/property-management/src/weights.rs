
//! Autogenerated weights for `pallet_property_management`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 47.2.0
//! DATE: 2025-07-31, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `recrafter-Legion-5-16IRX9`, CPU: `Intel(R) Core(TM) i7-14650HX`
//! WASM-EXECUTION: `Compiled`, CHAIN: `None`, DB CACHE: 1024

// Executed Command:
// ./target/release/parachain-template-node
// benchmark
// pallet
// --pallet
// pallet_property_management
// --extrinsic
// *
// --steps
// 50
// --repeat
// 20
// --output
// ./pallets/property-management/src/weights.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::Weight};
use core::marker::PhantomData;

pub trait WeightInfo {
	fn add_letting_agent() -> Weight;
	fn letting_agent_deposit() -> Weight;
	fn add_letting_agent_to_location() -> Weight;
	fn letting_agent_propose() -> Weight;
	fn vote_on_letting_agent() -> Weight;
	fn finalize_letting_agent() -> Weight;
	fn distribute_income() -> Weight;
	fn withdraw_funds() -> Weight;
}

/// Weight functions for `pallet_property_management`.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	/// Storage: `Regions::RegionDetails` (r:1 w:0)
	/// Proof: `Regions::RegionDetails` (`max_values`: None, `max_size`: Some(87), added: 2562, mode: `MaxEncodedLen`)
	/// Storage: `Regions::LocationRegistration` (r:1 w:0)
	/// Proof: `Regions::LocationRegistration` (`max_values`: None, `max_size`: Some(46), added: 2521, mode: `MaxEncodedLen`)
	/// Storage: `PropertyManagement::LettingInfo` (r:1 w:1)
	/// Proof: `PropertyManagement::LettingInfo` (`max_values`: None, `max_size`: Some(10157), added: 12632, mode: `MaxEncodedLen`)
	fn add_letting_agent() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `305`
		//  Estimated: `13622`
		// Minimum execution time: 20_998_000 picoseconds.
		Weight::from_parts(21_744_000, 0)
			.saturating_add(Weight::from_parts(0, 13622))
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `PropertyManagement::LettingInfo` (r:1 w:1)
	/// Proof: `PropertyManagement::LettingInfo` (`max_values`: None, `max_size`: Some(10157), added: 12632, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Holds` (r:1 w:1)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(193), added: 2668, mode: `MaxEncodedLen`)
	fn letting_agent_deposit() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `326`
		//  Estimated: `13622`
		// Minimum execution time: 52_843_000 picoseconds.
		Weight::from_parts(54_821_000, 0)
			.saturating_add(Weight::from_parts(0, 13622))
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(3))
	}
	/// Storage: `PropertyManagement::LettingInfo` (r:1 w:1)
	/// Proof: `PropertyManagement::LettingInfo` (`max_values`: None, `max_size`: Some(10157), added: 12632, mode: `MaxEncodedLen`)
	/// Storage: `Regions::RegionDetails` (r:1 w:0)
	/// Proof: `Regions::RegionDetails` (`max_values`: None, `max_size`: Some(87), added: 2562, mode: `MaxEncodedLen`)
	/// Storage: `Regions::LocationRegistration` (r:1 w:0)
	/// Proof: `Regions::LocationRegistration` (`max_values`: None, `max_size`: Some(46), added: 2521, mode: `MaxEncodedLen`)
	fn add_letting_agent_to_location() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1616`
		//  Estimated: `13622`
		// Minimum execution time: 42_264_000 picoseconds.
		Weight::from_parts(43_194_000, 0)
			.saturating_add(Weight::from_parts(0, 13622))
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `RealEstateAsset::PropertyAssetInfo` (r:1 w:0)
	/// Proof: `RealEstateAsset::PropertyAssetInfo` (`max_values`: None, `max_size`: Some(62), added: 2537, mode: `MaxEncodedLen`)
	/// Storage: `PropertyManagement::LettingStorage` (r:1 w:0)
	/// Proof: `PropertyManagement::LettingStorage` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	/// Storage: `PropertyManagement::LettingAgentProposal` (r:1 w:1)
	/// Proof: `PropertyManagement::LettingAgentProposal` (`max_values`: None, `max_size`: Some(56), added: 2531, mode: `MaxEncodedLen`)
	/// Storage: `PropertyManagement::LettingInfo` (r:1 w:0)
	/// Proof: `PropertyManagement::LettingInfo` (`max_values`: None, `max_size`: Some(10157), added: 12632, mode: `MaxEncodedLen`)
	/// Storage: `PropertyManagement::OngoingLettingAgentVoting` (r:0 w:1)
	/// Proof: `PropertyManagement::OngoingLettingAgentVoting` (`max_values`: None, `max_size`: Some(28), added: 2503, mode: `MaxEncodedLen`)
	fn letting_agent_propose() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `4339`
		//  Estimated: `13622`
		// Minimum execution time: 50_947_000 picoseconds.
		Weight::from_parts(65_972_000, 0)
			.saturating_add(Weight::from_parts(0, 13622))
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: `PropertyManagement::LettingAgentProposal` (r:1 w:0)
	/// Proof: `PropertyManagement::LettingAgentProposal` (`max_values`: None, `max_size`: Some(56), added: 2531, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAsset::PropertyOwnerToken` (r:1 w:0)
	/// Proof: `RealEstateAsset::PropertyOwnerToken` (`max_values`: None, `max_size`: Some(72), added: 2547, mode: `MaxEncodedLen`)
	/// Storage: `PropertyManagement::OngoingLettingAgentVoting` (r:1 w:1)
	/// Proof: `PropertyManagement::OngoingLettingAgentVoting` (`max_values`: None, `max_size`: Some(28), added: 2503, mode: `MaxEncodedLen`)
	/// Storage: `PropertyManagement::UserLettingAgentVote` (r:1 w:1)
	/// Proof: `PropertyManagement::UserLettingAgentVote` (`max_values`: None, `max_size`: Some(8272), added: 10747, mode: `MaxEncodedLen`)
	fn vote_on_letting_agent() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `9581`
		//  Estimated: `11737`
		// Minimum execution time: 64_180_000 picoseconds.
		Weight::from_parts(89_744_000, 0)
			.saturating_add(Weight::from_parts(0, 11737))
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: `XcavateWhitelist::WhitelistedAccounts` (r:1 w:0)
	/// Proof: `XcavateWhitelist::WhitelistedAccounts` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `PropertyManagement::LettingAgentProposal` (r:1 w:1)
	/// Proof: `PropertyManagement::LettingAgentProposal` (`max_values`: None, `max_size`: Some(56), added: 2531, mode: `MaxEncodedLen`)
	/// Storage: `PropertyManagement::OngoingLettingAgentVoting` (r:1 w:1)
	/// Proof: `PropertyManagement::OngoingLettingAgentVoting` (`max_values`: None, `max_size`: Some(28), added: 2503, mode: `MaxEncodedLen`)
	/// Storage: `PropertyManagement::LettingInfo` (r:1 w:1)
	/// Proof: `PropertyManagement::LettingInfo` (`max_values`: None, `max_size`: Some(10157), added: 12632, mode: `MaxEncodedLen`)
	/// Storage: `PropertyManagement::LettingStorage` (r:1 w:1)
	/// Proof: `PropertyManagement::LettingStorage` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	/// Storage: `PropertyManagement::UserLettingAgentVote` (r:0 w:1)
	/// Proof: `PropertyManagement::UserLettingAgentVote` (`max_values`: None, `max_size`: Some(8272), added: 10747, mode: `MaxEncodedLen`)
	fn finalize_letting_agent() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `5348`
		//  Estimated: `13622`
		// Minimum execution time: 60_496_000 picoseconds.
		Weight::from_parts(70_950_000, 0)
			.saturating_add(Weight::from_parts(0, 13622))
			.saturating_add(T::DbWeight::get().reads(5))
			.saturating_add(T::DbWeight::get().writes(5))
	}
	/// Storage: `PropertyManagement::LettingStorage` (r:1 w:0)
	/// Proof: `PropertyManagement::LettingStorage` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Account` (r:2 w:2)
	/// Proof: `Assets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `AssetsHolder::BalancesOnHold` (r:1 w:0)
	/// Proof: `AssetsHolder::BalancesOnHold` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAsset::PropertyOwner` (r:1 w:0)
	/// Proof: `RealEstateAsset::PropertyOwner` (`max_values`: None, `max_size`: Some(8022), added: 10497, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAsset::PropertyAssetInfo` (r:1 w:0)
	/// Proof: `RealEstateAsset::PropertyAssetInfo` (`max_values`: None, `max_size`: Some(62), added: 2537, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAsset::PropertyOwnerToken` (r:250 w:0)
	/// Proof: `RealEstateAsset::PropertyOwnerToken` (`max_values`: None, `max_size`: Some(72), added: 2547, mode: `MaxEncodedLen`)
	/// Storage: `PropertyManagement::InvestorFunds` (r:250 w:250)
	/// Proof: `PropertyManagement::InvestorFunds` (`max_values`: None, `max_size`: Some(104), added: 2579, mode: `MaxEncodedLen`)
	fn distribute_income() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `24910`
		//  Estimated: `645740`
		// Minimum execution time: 2_231_086_000 picoseconds.
		Weight::from_parts(2_259_970_000, 0)
			.saturating_add(Weight::from_parts(0, 645740))
			.saturating_add(T::DbWeight::get().reads(508))
			.saturating_add(T::DbWeight::get().writes(254))
	}
	/// Storage: `PropertyManagement::InvestorFunds` (r:1 w:1)
	/// Proof: `PropertyManagement::InvestorFunds` (`max_values`: None, `max_size`: Some(104), added: 2579, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Account` (r:2 w:2)
	/// Proof: `Assets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `AssetsHolder::BalancesOnHold` (r:1 w:0)
	/// Proof: `AssetsHolder::BalancesOnHold` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	fn withdraw_funds() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2942`
		//  Estimated: `6208`
		// Minimum execution time: 94_500_000 picoseconds.
		Weight::from_parts(102_299_000, 0)
			.saturating_add(Weight::from_parts(0, 6208))
			.saturating_add(T::DbWeight::get().reads(5))
			.saturating_add(T::DbWeight::get().writes(4))
	}
}

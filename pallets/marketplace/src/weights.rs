
//! Autogenerated weights for `pallet_marketplace`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 47.2.0
//! DATE: 2025-07-18, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `recrafter-Legion-5-16IRX9`, CPU: `Intel(R) Core(TM) i7-14650HX`
//! WASM-EXECUTION: `Compiled`, CHAIN: `None`, DB CACHE: 1024

// Executed Command:
// ./target/release/parachain-template-node
// benchmark
// pallet
// --pallet
// pallet_marketplace
// --extrinsic
// *
// --steps
// 50
// --repeat
// 20
// --output
// ./pallets/marketplace/src/weights.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::Weight};
use core::marker::PhantomData;

pub trait WeightInfo {
	fn list_object(_t: u32, _m: u32, ) -> Weight;
	fn buy_property_token_single_token(a: u32, b: u32, ) -> Weight;
	fn buy_property_token_all_token(b: u32, _n: u32, ) -> Weight;
	fn relist_token() -> Weight;
	fn buy_relisted_token() -> Weight;
	fn cancel_property_purchase() -> Weight;
	fn make_offer() -> Weight;
	fn handle_offer() -> Weight;
	fn cancel_offer() -> Weight;
	fn withdraw_rejected() -> Weight;
	fn withdraw_expired() -> Weight;
	fn withdraw_deposit_unsold() -> Weight;
	fn upgrade_listing() -> Weight;
	fn upgrade_object() -> Weight;
	fn delist_token() -> Weight;
	fn lawyer_claim_property() -> Weight;
	fn remove_from_case() -> Weight;
	fn lawyer_confirm_documents() -> Weight;
	fn send_property_token() -> Weight;
}

/// Weight functions for `pallet_marketplace`.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	/// Storage: `XcavateWhitelist::WhitelistedAccounts` (r:1 w:0)
	/// Proof: `XcavateWhitelist::WhitelistedAccounts` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `Regions::RegionDetails` (r:1 w:0)
	/// Proof: `Regions::RegionDetails` (`max_values`: None, `max_size`: Some(87), added: 2562, mode: `MaxEncodedLen`)
	/// Storage: `Regions::LocationRegistration` (r:1 w:0)
	/// Proof: `Regions::LocationRegistration` (`max_values`: None, `max_size`: Some(46), added: 2521, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::NextListingId` (r:1 w:1)
	/// Proof: `Marketplace::NextListingId` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:4 w:4)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAsset::NextNftId` (r:1 w:1)
	/// Proof: `RealEstateAsset::NextNftId` (`max_values`: None, `max_size`: Some(24), added: 2499, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAsset::NextAssetId` (r:1 w:1)
	/// Proof: `RealEstateAsset::NextAssetId` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAssets::Asset` (r:1 w:1)
	/// Proof: `RealEstateAssets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::Item` (r:1 w:1)
	/// Proof: `Nfts::Item` (`max_values`: None, `max_size`: Some(861), added: 3336, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::Collection` (r:1 w:1)
	/// Proof: `Nfts::Collection` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::CollectionConfigOf` (r:1 w:0)
	/// Proof: `Nfts::CollectionConfigOf` (`max_values`: None, `max_size`: Some(73), added: 2548, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::ItemConfigOf` (r:1 w:1)
	/// Proof: `Nfts::ItemConfigOf` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::CollectionRoleOf` (r:1 w:0)
	/// Proof: `Nfts::CollectionRoleOf` (`max_values`: None, `max_size`: Some(69), added: 2544, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::ItemMetadataOf` (r:1 w:1)
	/// Proof: `Nfts::ItemMetadataOf` (`max_values`: None, `max_size`: Some(140), added: 2615, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Holds` (r:2 w:2)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(193), added: 2668, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::Attribute` (r:1 w:1)
	/// Proof: `Nfts::Attribute` (`max_values`: None, `max_size`: Some(446), added: 2921, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAssets::NextAssetId` (r:1 w:0)
	/// Proof: `RealEstateAssets::NextAssetId` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAssets::Account` (r:1 w:1)
	/// Proof: `RealEstateAssets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAssets::Metadata` (r:1 w:1)
	/// Proof: `RealEstateAssets::Metadata` (`max_values`: None, `max_size`: Some(140), added: 2615, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAsset::PropertyAssetInfo` (r:0 w:1)
	/// Proof: `RealEstateAsset::PropertyAssetInfo` (`max_values`: None, `max_size`: Some(62), added: 2537, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::OngoingObjectListing` (r:0 w:1)
	/// Proof: `Marketplace::OngoingObjectListing` (`max_values`: None, `max_size`: Some(15095), added: 17570, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::ListingDeposits` (r:0 w:1)
	/// Proof: `Marketplace::ListingDeposits` (`max_values`: None, `max_size`: Some(68), added: 2543, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::ListedToken` (r:0 w:1)
	/// Proof: `Marketplace::ListedToken` (`max_values`: None, `max_size`: Some(24), added: 2499, mode: `MaxEncodedLen`)
	/// Storage: `NftFractionalization::NftToAsset` (r:0 w:1)
	/// Proof: `NftFractionalization::NftToAsset` (`max_values`: None, `max_size`: Some(92), added: 2567, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::Account` (r:0 w:1)
	/// Proof: `Nfts::Account` (`max_values`: None, `max_size`: Some(88), added: 2563, mode: `MaxEncodedLen`)
	/// The range of component `t` is `[100, 250]`.
	/// The range of component `m` is `[0, 50]`.
	fn list_object(_t: u32, m: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1189`
		//  Estimated: `11402`
		// Minimum execution time: 315_922_000 picoseconds.
		Weight::from_parts(324_640_076, 0)
			.saturating_add(Weight::from_parts(0, 11402))
			// Standard Error: 5_200
			.saturating_add(Weight::from_parts(1_761, 0).saturating_mul(m.into()))
			.saturating_add(T::DbWeight::get().reads(23))
			.saturating_add(T::DbWeight::get().writes(23))
	}
	/// Storage: `XcavateWhitelist::WhitelistedAccounts` (r:1 w:0)
	/// Proof: `XcavateWhitelist::WhitelistedAccounts` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::ListedToken` (r:1 w:1)
	/// Proof: `Marketplace::ListedToken` (`max_values`: None, `max_size`: Some(24), added: 2499, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::OngoingObjectListing` (r:1 w:1)
	/// Proof: `Marketplace::OngoingObjectListing` (`max_values`: None, `max_size`: Some(15095), added: 17570, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAsset::PropertyAssetInfo` (r:1 w:0)
	/// Proof: `RealEstateAsset::PropertyAssetInfo` (`max_values`: None, `max_size`: Some(62), added: 2537, mode: `MaxEncodedLen`)
	/// Storage: `Regions::RegionDetails` (r:1 w:0)
	/// Proof: `Regions::RegionDetails` (`max_values`: None, `max_size`: Some(87), added: 2562, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Account` (r:1 w:1)
	/// Proof: `Assets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `AssetsHolder::BalancesOnHold` (r:1 w:1)
	/// Proof: `AssetsHolder::BalancesOnHold` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `AssetsHolder::Holds` (r:1 w:1)
	/// Proof: `AssetsHolder::Holds` (`max_values`: None, `max_size`: Some(103), added: 2578, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::TokenBuyer` (r:1 w:1)
	/// Proof: `Marketplace::TokenBuyer` (`max_values`: None, `max_size`: Some(8022), added: 10497, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::TokenOwner` (r:1 w:1)
	/// Proof: `Marketplace::TokenOwner` (`max_values`: None, `max_size`: Some(10076), added: 12551, mode: `MaxEncodedLen`)
	/// The range of component `a` is `[1, 249]`.
	/// The range of component `b` is `[0, 248]`.
	fn buy_property_token_single_token(a: u32, b: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `4173 + b * (38 Â±0)`
		//  Estimated: `18560`
		// Minimum execution time: 95_287_000 picoseconds.
		Weight::from_parts(113_532_793, 0)
			.saturating_add(Weight::from_parts(0, 18560))
			// Standard Error: 1_811
			.saturating_add(Weight::from_parts(10_284, 0).saturating_mul(a.into()))
			// Standard Error: 1_811
			.saturating_add(Weight::from_parts(114_396, 0).saturating_mul(b.into()))
			.saturating_add(T::DbWeight::get().reads(11))
			.saturating_add(T::DbWeight::get().writes(8))
	}
	/// Storage: `XcavateWhitelist::WhitelistedAccounts` (r:1 w:0)
	/// Proof: `XcavateWhitelist::WhitelistedAccounts` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::ListedToken` (r:1 w:1)
	/// Proof: `Marketplace::ListedToken` (`max_values`: None, `max_size`: Some(24), added: 2499, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::OngoingObjectListing` (r:1 w:1)
	/// Proof: `Marketplace::OngoingObjectListing` (`max_values`: None, `max_size`: Some(15095), added: 17570, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAsset::PropertyAssetInfo` (r:1 w:0)
	/// Proof: `RealEstateAsset::PropertyAssetInfo` (`max_values`: None, `max_size`: Some(62), added: 2537, mode: `MaxEncodedLen`)
	/// Storage: `Regions::RegionDetails` (r:1 w:0)
	/// Proof: `Regions::RegionDetails` (`max_values`: None, `max_size`: Some(87), added: 2562, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Account` (r:251 w:251)
	/// Proof: `Assets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `AssetsHolder::BalancesOnHold` (r:250 w:250)
	/// Proof: `AssetsHolder::BalancesOnHold` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `AssetsHolder::Holds` (r:250 w:250)
	/// Proof: `AssetsHolder::Holds` (`max_values`: None, `max_size`: Some(103), added: 2578, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::TokenBuyer` (r:1 w:1)
	/// Proof: `Marketplace::TokenBuyer` (`max_values`: None, `max_size`: Some(8022), added: 10497, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::TokenOwner` (r:250 w:1)
	/// Proof: `Marketplace::TokenOwner` (`max_values`: None, `max_size`: Some(10076), added: 12551, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:251 w:251)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAssets::Asset` (r:1 w:1)
	/// Proof: `RealEstateAssets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAssets::Account` (r:251 w:251)
	/// Proof: `RealEstateAssets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAsset::PropertyOwner` (r:1 w:1)
	/// Proof: `RealEstateAsset::PropertyOwner` (`max_values`: None, `max_size`: Some(8022), added: 10497, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAsset::PropertyOwnerToken` (r:0 w:250)
	/// Proof: `RealEstateAsset::PropertyOwnerToken` (`max_values`: None, `max_size`: Some(72), added: 2547, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::PropertyLawyer` (r:0 w:1)
	/// Proof: `Marketplace::PropertyLawyer` (`max_values`: None, `max_size`: Some(10093), added: 12568, mode: `MaxEncodedLen`)
	/// The range of component `b` is `[1, 250]`.
	/// The range of component `n` is `[1, 2]`.
	fn buy_property_token_all_token(b: u32, _n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2618 + b * (548 Â±0)`
		//  Estimated: `18560 + b * (12551 Â±0)`
		// Minimum execution time: 217_581_000 picoseconds.
		Weight::from_parts(167_800_527, 0)
			.saturating_add(Weight::from_parts(0, 18560))
			// Standard Error: 38_639
			.saturating_add(Weight::from_parts(102_700_288, 0).saturating_mul(b.into()))
			.saturating_add(T::DbWeight::get().reads(12))
			.saturating_add(T::DbWeight::get().reads((6_u64).saturating_mul(b.into())))
			.saturating_add(T::DbWeight::get().writes(11))
			.saturating_add(T::DbWeight::get().writes((6_u64).saturating_mul(b.into())))
			.saturating_add(Weight::from_parts(0, 12551).saturating_mul(b.into()))
	}
	/// Storage: `XcavateWhitelist::WhitelistedAccounts` (r:1 w:0)
	/// Proof: `XcavateWhitelist::WhitelistedAccounts` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAsset::PropertyAssetInfo` (r:1 w:0)
	/// Proof: `RealEstateAsset::PropertyAssetInfo` (`max_values`: None, `max_size`: Some(62), added: 2537, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAssets::Asset` (r:1 w:1)
	/// Proof: `RealEstateAssets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAssets::Account` (r:2 w:2)
	/// Proof: `RealEstateAssets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:2 w:2)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::NextListingId` (r:1 w:1)
	/// Proof: `Marketplace::NextListingId` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::TokenListings` (r:0 w:1)
	/// Proof: `Marketplace::TokenListings` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	fn relist_token() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `3732`
		//  Estimated: `6208`
		// Minimum execution time: 107_422_000 picoseconds.
		Weight::from_parts(121_419_000, 0)
			.saturating_add(Weight::from_parts(0, 6208))
			.saturating_add(T::DbWeight::get().reads(8))
			.saturating_add(T::DbWeight::get().writes(7))
	}
	/// Storage: `XcavateWhitelist::WhitelistedAccounts` (r:1 w:0)
	/// Proof: `XcavateWhitelist::WhitelistedAccounts` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::TokenListings` (r:1 w:1)
	/// Proof: `Marketplace::TokenListings` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Account` (r:3 w:3)
	/// Proof: `Assets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `AssetsHolder::BalancesOnHold` (r:1 w:0)
	/// Proof: `AssetsHolder::BalancesOnHold` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAsset::PropertyOwnerToken` (r:1 w:2)
	/// Proof: `RealEstateAsset::PropertyOwnerToken` (`max_values`: None, `max_size`: Some(72), added: 2547, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAssets::Asset` (r:1 w:1)
	/// Proof: `RealEstateAssets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAssets::Account` (r:2 w:2)
	/// Proof: `RealEstateAssets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:2 w:2)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAsset::PropertyOwner` (r:1 w:1)
	/// Proof: `RealEstateAsset::PropertyOwner` (`max_values`: None, `max_size`: Some(8022), added: 10497, mode: `MaxEncodedLen`)
	fn buy_relisted_token() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `14489`
		//  Estimated: `11487`
		// Minimum execution time: 223_811_000 picoseconds.
		Weight::from_parts(239_152_000, 0)
			.saturating_add(Weight::from_parts(0, 11487))
			.saturating_add(T::DbWeight::get().reads(14))
			.saturating_add(T::DbWeight::get().writes(13))
	}
	/// Storage: `Marketplace::OngoingObjectListing` (r:1 w:1)
	/// Proof: `Marketplace::OngoingObjectListing` (`max_values`: None, `max_size`: Some(15095), added: 17570, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::PropertyLawyer` (r:1 w:0)
	/// Proof: `Marketplace::PropertyLawyer` (`max_values`: None, `max_size`: Some(10093), added: 12568, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::TokenOwner` (r:1 w:1)
	/// Proof: `Marketplace::TokenOwner` (`max_values`: None, `max_size`: Some(10076), added: 12551, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Account` (r:1 w:1)
	/// Proof: `Assets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `AssetsHolder::Holds` (r:1 w:1)
	/// Proof: `AssetsHolder::Holds` (`max_values`: None, `max_size`: Some(103), added: 2578, mode: `MaxEncodedLen`)
	/// Storage: `AssetsHolder::BalancesOnHold` (r:1 w:1)
	/// Proof: `AssetsHolder::BalancesOnHold` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::ListedToken` (r:1 w:1)
	/// Proof: `Marketplace::ListedToken` (`max_values`: None, `max_size`: Some(24), added: 2499, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::TokenBuyer` (r:1 w:1)
	/// Proof: `Marketplace::TokenBuyer` (`max_values`: None, `max_size`: Some(8022), added: 10497, mode: `MaxEncodedLen`)
	fn cancel_property_purchase() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `12757`
		//  Estimated: `18560`
		// Minimum execution time: 129_184_000 picoseconds.
		Weight::from_parts(137_906_000, 0)
			.saturating_add(Weight::from_parts(0, 18560))
			.saturating_add(T::DbWeight::get().reads(9))
			.saturating_add(T::DbWeight::get().writes(8))
	}
	/// Storage: `XcavateWhitelist::WhitelistedAccounts` (r:1 w:0)
	/// Proof: `XcavateWhitelist::WhitelistedAccounts` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::OngoingOffers` (r:1 w:1)
	/// Proof: `Marketplace::OngoingOffers` (`max_values`: None, `max_size`: Some(92), added: 2567, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::TokenListings` (r:1 w:0)
	/// Proof: `Marketplace::TokenListings` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Account` (r:1 w:1)
	/// Proof: `Assets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `AssetsHolder::BalancesOnHold` (r:1 w:1)
	/// Proof: `AssetsHolder::BalancesOnHold` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `AssetsHolder::Holds` (r:1 w:1)
	/// Proof: `AssetsHolder::Holds` (`max_values`: None, `max_size`: Some(103), added: 2578, mode: `MaxEncodedLen`)
	fn make_offer() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2652`
		//  Estimated: `3675`
		// Minimum execution time: 96_771_000 picoseconds.
		Weight::from_parts(106_323_000, 0)
			.saturating_add(Weight::from_parts(0, 3675))
			.saturating_add(T::DbWeight::get().reads(7))
			.saturating_add(T::DbWeight::get().writes(5))
	}
	/// Storage: `XcavateWhitelist::WhitelistedAccounts` (r:1 w:0)
	/// Proof: `XcavateWhitelist::WhitelistedAccounts` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::TokenListings` (r:1 w:0)
	/// Proof: `Marketplace::TokenListings` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::OngoingOffers` (r:1 w:1)
	/// Proof: `Marketplace::OngoingOffers` (`max_values`: None, `max_size`: Some(92), added: 2567, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Account` (r:3 w:3)
	/// Proof: `Assets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `AssetsHolder::Holds` (r:1 w:1)
	/// Proof: `AssetsHolder::Holds` (`max_values`: None, `max_size`: Some(103), added: 2578, mode: `MaxEncodedLen`)
	/// Storage: `AssetsHolder::BalancesOnHold` (r:1 w:1)
	/// Proof: `AssetsHolder::BalancesOnHold` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAsset::PropertyOwnerToken` (r:1 w:2)
	/// Proof: `RealEstateAsset::PropertyOwnerToken` (`max_values`: None, `max_size`: Some(72), added: 2547, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAssets::Asset` (r:1 w:1)
	/// Proof: `RealEstateAssets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAssets::Account` (r:2 w:2)
	/// Proof: `RealEstateAssets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:2 w:2)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAsset::PropertyOwner` (r:1 w:1)
	/// Proof: `RealEstateAsset::PropertyOwner` (`max_values`: None, `max_size`: Some(8022), added: 10497, mode: `MaxEncodedLen`)
	fn handle_offer() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `15411`
		//  Estimated: `11487`
		// Minimum execution time: 269_408_000 picoseconds.
		Weight::from_parts(278_572_000, 0)
			.saturating_add(Weight::from_parts(0, 11487))
			.saturating_add(T::DbWeight::get().reads(16))
			.saturating_add(T::DbWeight::get().writes(15))
	}
	/// Storage: `Marketplace::OngoingOffers` (r:1 w:1)
	/// Proof: `Marketplace::OngoingOffers` (`max_values`: None, `max_size`: Some(92), added: 2567, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Account` (r:1 w:1)
	/// Proof: `Assets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `AssetsHolder::Holds` (r:1 w:1)
	/// Proof: `AssetsHolder::Holds` (`max_values`: None, `max_size`: Some(103), added: 2578, mode: `MaxEncodedLen`)
	/// Storage: `AssetsHolder::BalancesOnHold` (r:1 w:1)
	/// Proof: `AssetsHolder::BalancesOnHold` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	fn cancel_offer() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1935`
		//  Estimated: `3675`
		// Minimum execution time: 78_554_000 picoseconds.
		Weight::from_parts(87_512_000, 0)
			.saturating_add(Weight::from_parts(0, 3675))
			.saturating_add(T::DbWeight::get().reads(5))
			.saturating_add(T::DbWeight::get().writes(5))
	}
	/// Storage: `Marketplace::TokenOwner` (r:1 w:1)
	/// Proof: `Marketplace::TokenOwner` (`max_values`: None, `max_size`: Some(10076), added: 12551, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::OngoingObjectListing` (r:1 w:0)
	/// Proof: `Marketplace::OngoingObjectListing` (`max_values`: None, `max_size`: Some(15095), added: 17570, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::RefundToken` (r:1 w:1)
	/// Proof: `Marketplace::RefundToken` (`max_values`: None, `max_size`: Some(10097), added: 12572, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Account` (r:4 w:4)
	/// Proof: `Assets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `AssetsHolder::BalancesOnHold` (r:1 w:1)
	/// Proof: `AssetsHolder::BalancesOnHold` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAssets::Asset` (r:1 w:1)
	/// Proof: `RealEstateAssets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAssets::Account` (r:2 w:2)
	/// Proof: `RealEstateAssets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:6 w:6)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAsset::PropertyAssetInfo` (r:1 w:1)
	/// Proof: `RealEstateAsset::PropertyAssetInfo` (`max_values`: None, `max_size`: Some(62), added: 2537, mode: `MaxEncodedLen`)
	/// Storage: `NftFractionalization::NftToAsset` (r:1 w:1)
	/// Proof: `NftFractionalization::NftToAsset` (`max_values`: None, `max_size`: Some(92), added: 2567, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::Attribute` (r:1 w:1)
	/// Proof: `Nfts::Attribute` (`max_values`: None, `max_size`: Some(446), added: 2921, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::Collection` (r:1 w:1)
	/// Proof: `Nfts::Collection` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::CollectionConfigOf` (r:1 w:0)
	/// Proof: `Nfts::CollectionConfigOf` (`max_values`: None, `max_size`: Some(73), added: 2548, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::ItemConfigOf` (r:1 w:1)
	/// Proof: `Nfts::ItemConfigOf` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::Item` (r:1 w:1)
	/// Proof: `Nfts::Item` (`max_values`: None, `max_size`: Some(861), added: 3336, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Holds` (r:2 w:2)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(193), added: 2668, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::ItemMetadataOf` (r:1 w:1)
	/// Proof: `Nfts::ItemMetadataOf` (`max_values`: None, `max_size`: Some(140), added: 2615, mode: `MaxEncodedLen`)
	/// Storage: `AssetsHolder::Holds` (r:1 w:1)
	/// Proof: `AssetsHolder::Holds` (`max_values`: None, `max_size`: Some(103), added: 2578, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::ListingDeposits` (r:1 w:1)
	/// Proof: `Marketplace::ListingDeposits` (`max_values`: None, `max_size`: Some(68), added: 2543, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAsset::PropertyOwner` (r:0 w:1)
	/// Proof: `RealEstateAsset::PropertyOwner` (`max_values`: None, `max_size`: Some(8022), added: 10497, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAsset::PropertyOwnerToken` (r:0 w:1)
	/// Proof: `RealEstateAsset::PropertyOwnerToken` (`max_values`: None, `max_size`: Some(72), added: 2547, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::TokenBuyer` (r:0 w:1)
	/// Proof: `Marketplace::TokenBuyer` (`max_values`: None, `max_size`: Some(8022), added: 10497, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::Account` (r:0 w:1)
	/// Proof: `Nfts::Account` (`max_values`: None, `max_size`: Some(88), added: 2563, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::ItemPriceOf` (r:0 w:1)
	/// Proof: `Nfts::ItemPriceOf` (`max_values`: None, `max_size`: Some(89), added: 2564, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::ItemAttributesApprovalsOf` (r:0 w:1)
	/// Proof: `Nfts::ItemAttributesApprovalsOf` (`max_values`: None, `max_size`: Some(681), added: 3156, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::PendingSwapOf` (r:0 w:1)
	/// Proof: `Nfts::PendingSwapOf` (`max_values`: None, `max_size`: Some(71), added: 2546, mode: `MaxEncodedLen`)
	fn withdraw_rejected() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `4045`
		//  Estimated: `18560`
		// Minimum execution time: 479_251_000 picoseconds.
		Weight::from_parts(488_739_000, 0)
			.saturating_add(Weight::from_parts(0, 18560))
			.saturating_add(T::DbWeight::get().reads(30))
			.saturating_add(T::DbWeight::get().writes(35))
	}
	/// Storage: `Marketplace::OngoingObjectListing` (r:1 w:1)
	/// Proof: `Marketplace::OngoingObjectListing` (`max_values`: None, `max_size`: Some(15095), added: 17570, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::PropertyLawyer` (r:1 w:0)
	/// Proof: `Marketplace::PropertyLawyer` (`max_values`: None, `max_size`: Some(10093), added: 12568, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::TokenOwner` (r:1 w:1)
	/// Proof: `Marketplace::TokenOwner` (`max_values`: None, `max_size`: Some(10076), added: 12551, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Account` (r:1 w:1)
	/// Proof: `Assets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `AssetsHolder::Holds` (r:1 w:1)
	/// Proof: `AssetsHolder::Holds` (`max_values`: None, `max_size`: Some(103), added: 2578, mode: `MaxEncodedLen`)
	/// Storage: `AssetsHolder::BalancesOnHold` (r:1 w:1)
	/// Proof: `AssetsHolder::BalancesOnHold` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::ListedToken` (r:1 w:1)
	/// Proof: `Marketplace::ListedToken` (`max_values`: None, `max_size`: Some(24), added: 2499, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAsset::PropertyAssetInfo` (r:1 w:1)
	/// Proof: `RealEstateAsset::PropertyAssetInfo` (`max_values`: None, `max_size`: Some(62), added: 2537, mode: `MaxEncodedLen`)
	/// Storage: `NftFractionalization::NftToAsset` (r:1 w:1)
	/// Proof: `NftFractionalization::NftToAsset` (`max_values`: None, `max_size`: Some(92), added: 2567, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAssets::Asset` (r:1 w:1)
	/// Proof: `RealEstateAssets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAssets::Account` (r:1 w:1)
	/// Proof: `RealEstateAssets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:3 w:3)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::Attribute` (r:1 w:1)
	/// Proof: `Nfts::Attribute` (`max_values`: None, `max_size`: Some(446), added: 2921, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::Collection` (r:1 w:1)
	/// Proof: `Nfts::Collection` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::CollectionConfigOf` (r:1 w:0)
	/// Proof: `Nfts::CollectionConfigOf` (`max_values`: None, `max_size`: Some(73), added: 2548, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::ItemConfigOf` (r:1 w:1)
	/// Proof: `Nfts::ItemConfigOf` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::Item` (r:1 w:1)
	/// Proof: `Nfts::Item` (`max_values`: None, `max_size`: Some(861), added: 3336, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Holds` (r:2 w:2)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(193), added: 2668, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::ItemMetadataOf` (r:1 w:1)
	/// Proof: `Nfts::ItemMetadataOf` (`max_values`: None, `max_size`: Some(140), added: 2615, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::ListingDeposits` (r:1 w:1)
	/// Proof: `Marketplace::ListingDeposits` (`max_values`: None, `max_size`: Some(68), added: 2543, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::TokenBuyer` (r:0 w:1)
	/// Proof: `Marketplace::TokenBuyer` (`max_values`: None, `max_size`: Some(8022), added: 10497, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::Account` (r:0 w:1)
	/// Proof: `Nfts::Account` (`max_values`: None, `max_size`: Some(88), added: 2563, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::ItemPriceOf` (r:0 w:1)
	/// Proof: `Nfts::ItemPriceOf` (`max_values`: None, `max_size`: Some(89), added: 2564, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::ItemAttributesApprovalsOf` (r:0 w:1)
	/// Proof: `Nfts::ItemAttributesApprovalsOf` (`max_values`: None, `max_size`: Some(681), added: 3156, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::PendingSwapOf` (r:0 w:1)
	/// Proof: `Nfts::PendingSwapOf` (`max_values`: None, `max_size`: Some(71), added: 2546, mode: `MaxEncodedLen`)
	fn withdraw_expired() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `3833`
		//  Estimated: `18560`
		// Minimum execution time: 341_810_000 picoseconds.
		Weight::from_parts(351_187_000, 0)
			.saturating_add(Weight::from_parts(0, 18560))
			.saturating_add(T::DbWeight::get().reads(24))
			.saturating_add(T::DbWeight::get().writes(27))
	}
	/// Storage: `Marketplace::OngoingObjectListing` (r:1 w:1)
	/// Proof: `Marketplace::OngoingObjectListing` (`max_values`: None, `max_size`: Some(15095), added: 17570, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::PropertyLawyer` (r:1 w:0)
	/// Proof: `Marketplace::PropertyLawyer` (`max_values`: None, `max_size`: Some(10093), added: 12568, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::ListedToken` (r:1 w:1)
	/// Proof: `Marketplace::ListedToken` (`max_values`: None, `max_size`: Some(24), added: 2499, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAsset::PropertyAssetInfo` (r:1 w:1)
	/// Proof: `RealEstateAsset::PropertyAssetInfo` (`max_values`: None, `max_size`: Some(62), added: 2537, mode: `MaxEncodedLen`)
	/// Storage: `NftFractionalization::NftToAsset` (r:1 w:1)
	/// Proof: `NftFractionalization::NftToAsset` (`max_values`: None, `max_size`: Some(92), added: 2567, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAssets::Asset` (r:1 w:1)
	/// Proof: `RealEstateAssets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAssets::Account` (r:1 w:1)
	/// Proof: `RealEstateAssets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:3 w:3)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::Attribute` (r:1 w:1)
	/// Proof: `Nfts::Attribute` (`max_values`: None, `max_size`: Some(446), added: 2921, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::Collection` (r:1 w:1)
	/// Proof: `Nfts::Collection` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::CollectionConfigOf` (r:1 w:0)
	/// Proof: `Nfts::CollectionConfigOf` (`max_values`: None, `max_size`: Some(73), added: 2548, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::ItemConfigOf` (r:1 w:1)
	/// Proof: `Nfts::ItemConfigOf` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::Item` (r:1 w:1)
	/// Proof: `Nfts::Item` (`max_values`: None, `max_size`: Some(861), added: 3336, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Holds` (r:2 w:2)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(193), added: 2668, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::ItemMetadataOf` (r:1 w:1)
	/// Proof: `Nfts::ItemMetadataOf` (`max_values`: None, `max_size`: Some(140), added: 2615, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::ListingDeposits` (r:1 w:1)
	/// Proof: `Marketplace::ListingDeposits` (`max_values`: None, `max_size`: Some(68), added: 2543, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::TokenBuyer` (r:0 w:1)
	/// Proof: `Marketplace::TokenBuyer` (`max_values`: None, `max_size`: Some(8022), added: 10497, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::Account` (r:0 w:1)
	/// Proof: `Nfts::Account` (`max_values`: None, `max_size`: Some(88), added: 2563, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::ItemPriceOf` (r:0 w:1)
	/// Proof: `Nfts::ItemPriceOf` (`max_values`: None, `max_size`: Some(89), added: 2564, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::ItemAttributesApprovalsOf` (r:0 w:1)
	/// Proof: `Nfts::ItemAttributesApprovalsOf` (`max_values`: None, `max_size`: Some(681), added: 3156, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::PendingSwapOf` (r:0 w:1)
	/// Proof: `Nfts::PendingSwapOf` (`max_values`: None, `max_size`: Some(71), added: 2546, mode: `MaxEncodedLen`)
	fn withdraw_deposit_unsold() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2484`
		//  Estimated: `18560`
		// Minimum execution time: 291_258_000 picoseconds.
		Weight::from_parts(297_815_000, 0)
			.saturating_add(Weight::from_parts(0, 18560))
			.saturating_add(T::DbWeight::get().reads(19))
			.saturating_add(T::DbWeight::get().writes(22))
	}
	/// Storage: `XcavateWhitelist::WhitelistedAccounts` (r:1 w:0)
	/// Proof: `XcavateWhitelist::WhitelistedAccounts` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::TokenListings` (r:1 w:1)
	/// Proof: `Marketplace::TokenListings` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	fn upgrade_listing() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1243`
		//  Estimated: `3549`
		// Minimum execution time: 38_356_000 picoseconds.
		Weight::from_parts(43_958_000, 0)
			.saturating_add(Weight::from_parts(0, 3549))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `XcavateWhitelist::WhitelistedAccounts` (r:1 w:0)
	/// Proof: `XcavateWhitelist::WhitelistedAccounts` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::ListedToken` (r:1 w:0)
	/// Proof: `Marketplace::ListedToken` (`max_values`: None, `max_size`: Some(24), added: 2499, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::PropertyLawyer` (r:1 w:0)
	/// Proof: `Marketplace::PropertyLawyer` (`max_values`: None, `max_size`: Some(10093), added: 12568, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::OngoingObjectListing` (r:1 w:1)
	/// Proof: `Marketplace::OngoingObjectListing` (`max_values`: None, `max_size`: Some(15095), added: 17570, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAsset::PropertyAssetInfo` (r:1 w:0)
	/// Proof: `RealEstateAsset::PropertyAssetInfo` (`max_values`: None, `max_size`: Some(62), added: 2537, mode: `MaxEncodedLen`)
	fn upgrade_object() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `695`
		//  Estimated: `18560`
		// Minimum execution time: 35_497_000 picoseconds.
		Weight::from_parts(36_384_000, 0)
			.saturating_add(Weight::from_parts(0, 18560))
			.saturating_add(T::DbWeight::get().reads(5))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `XcavateWhitelist::WhitelistedAccounts` (r:1 w:0)
	/// Proof: `XcavateWhitelist::WhitelistedAccounts` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::TokenListings` (r:1 w:1)
	/// Proof: `Marketplace::TokenListings` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAssets::Asset` (r:1 w:1)
	/// Proof: `RealEstateAssets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAssets::Account` (r:2 w:2)
	/// Proof: `RealEstateAssets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:2 w:2)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	fn delist_token() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `3626`
		//  Estimated: `6208`
		// Minimum execution time: 106_867_000 picoseconds.
		Weight::from_parts(113_488_000, 0)
			.saturating_add(Weight::from_parts(0, 6208))
			.saturating_add(T::DbWeight::get().reads(7))
			.saturating_add(T::DbWeight::get().writes(6))
	}
	/// Storage: `Regions::RealEstateLawyer` (r:1 w:0)
	/// Proof: `Regions::RealEstateLawyer` (`max_values`: None, `max_size`: Some(50), added: 2525, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::PropertyLawyer` (r:1 w:1)
	/// Proof: `Marketplace::PropertyLawyer` (`max_values`: None, `max_size`: Some(10093), added: 12568, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::OngoingObjectListing` (r:1 w:0)
	/// Proof: `Marketplace::OngoingObjectListing` (`max_values`: None, `max_size`: Some(15095), added: 17570, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAsset::PropertyAssetInfo` (r:1 w:0)
	/// Proof: `RealEstateAsset::PropertyAssetInfo` (`max_values`: None, `max_size`: Some(62), added: 2537, mode: `MaxEncodedLen`)
	fn lawyer_claim_property() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1015`
		//  Estimated: `18560`
		// Minimum execution time: 49_160_000 picoseconds.
		Weight::from_parts(58_694_000, 0)
			.saturating_add(Weight::from_parts(0, 18560))
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `Regions::RealEstateLawyer` (r:1 w:0)
	/// Proof: `Regions::RealEstateLawyer` (`max_values`: None, `max_size`: Some(50), added: 2525, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::PropertyLawyer` (r:1 w:1)
	/// Proof: `Marketplace::PropertyLawyer` (`max_values`: None, `max_size`: Some(10093), added: 12568, mode: `MaxEncodedLen`)
	fn remove_from_case() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `697`
		//  Estimated: `13558`
		// Minimum execution time: 39_856_000 picoseconds.
		Weight::from_parts(45_379_000, 0)
			.saturating_add(Weight::from_parts(0, 13558))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `Marketplace::PropertyLawyer` (r:1 w:1)
	/// Proof: `Marketplace::PropertyLawyer` (`max_values`: None, `max_size`: Some(10093), added: 12568, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::OngoingObjectListing` (r:1 w:1)
	/// Proof: `Marketplace::OngoingObjectListing` (`max_values`: None, `max_size`: Some(15095), added: 17570, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAsset::PropertyAssetInfo` (r:1 w:1)
	/// Proof: `RealEstateAsset::PropertyAssetInfo` (`max_values`: None, `max_size`: Some(62), added: 2537, mode: `MaxEncodedLen`)
	/// Storage: `Regions::RegionDetails` (r:1 w:0)
	/// Proof: `Regions::RegionDetails` (`max_values`: None, `max_size`: Some(87), added: 2562, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Account` (r:5 w:5)
	/// Proof: `Assets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `AssetsHolder::BalancesOnHold` (r:1 w:1)
	/// Proof: `AssetsHolder::BalancesOnHold` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:5 w:5)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `AssetsHolder::Holds` (r:1 w:1)
	/// Proof: `AssetsHolder::Holds` (`max_values`: None, `max_size`: Some(103), added: 2578, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::TokenBuyer` (r:1 w:1)
	/// Proof: `Marketplace::TokenBuyer` (`max_values`: None, `max_size`: Some(8022), added: 10497, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::ListingDeposits` (r:1 w:1)
	/// Proof: `Marketplace::ListingDeposits` (`max_values`: None, `max_size`: Some(68), added: 2543, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Holds` (r:1 w:1)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(193), added: 2668, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::TokenOwner` (r:0 w:250)
	/// Proof: `Marketplace::TokenOwner` (`max_values`: None, `max_size`: Some(10076), added: 12551, mode: `MaxEncodedLen`)
	fn lawyer_confirm_documents() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `13458`
		//  Estimated: `18560`
		// Minimum execution time: 756_517_000 picoseconds.
		Weight::from_parts(774_918_000, 0)
			.saturating_add(Weight::from_parts(0, 18560))
			.saturating_add(T::DbWeight::get().reads(20))
			.saturating_add(T::DbWeight::get().writes(269))
	}
	/// Storage: `XcavateWhitelist::WhitelistedAccounts` (r:2 w:0)
	/// Proof: `XcavateWhitelist::WhitelistedAccounts` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAsset::PropertyOwnerToken` (r:1 w:2)
	/// Proof: `RealEstateAsset::PropertyOwnerToken` (`max_values`: None, `max_size`: Some(72), added: 2547, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAssets::Asset` (r:1 w:1)
	/// Proof: `RealEstateAssets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAssets::Account` (r:2 w:2)
	/// Proof: `RealEstateAssets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:2 w:2)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAsset::PropertyOwner` (r:1 w:1)
	/// Proof: `RealEstateAsset::PropertyOwner` (`max_values`: None, `max_size`: Some(8022), added: 10497, mode: `MaxEncodedLen`)
	fn send_property_token() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `12920`
		//  Estimated: `11487`
		// Minimum execution time: 127_395_000 picoseconds.
		Weight::from_parts(134_049_000, 0)
			.saturating_add(Weight::from_parts(0, 11487))
			.saturating_add(T::DbWeight::get().reads(9))
			.saturating_add(T::DbWeight::get().writes(8))
	}
}

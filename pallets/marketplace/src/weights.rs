
//! Autogenerated weights for `pallet_marketplace`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 47.2.0
//! DATE: 2025-07-29, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `recrafter-Legion-5-16IRX9`, CPU: `Intel(R) Core(TM) i7-14650HX`
//! WASM-EXECUTION: `Compiled`, CHAIN: `None`, DB CACHE: 1024

// Executed Command:
// ./target/release/parachain-template-node
// benchmark
// pallet
// --pallet
// pallet_marketplace
// --extrinsic
// *
// --steps
// 50
// --repeat
// 20
// --output
// ./pallets/marketplace/src/weights.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::Weight};
use core::marker::PhantomData;

pub trait WeightInfo {
	fn list_object(_m: u32, ) -> Weight;
	fn buy_property_token_single_token(a: u32, b: u32, ) -> Weight;
	fn buy_property_token_all_token(b: u32, _n: u32, ) -> Weight;
	fn claim_property_token() -> Weight;
	fn relist_token() -> Weight;
	fn buy_relisted_token() -> Weight;
	fn cancel_property_purchase() -> Weight;
	fn make_offer() -> Weight;
	fn handle_offer() -> Weight;
	fn cancel_offer() -> Weight;
	fn withdraw_rejected() -> Weight;
	fn withdraw_expired() -> Weight;
	fn withdraw_deposit_unsold() -> Weight;
	fn upgrade_listing() -> Weight;
	fn upgrade_object() -> Weight;
	fn delist_token() -> Weight;
	fn lawyer_claim_property() -> Weight;
	fn vote_on_spv_lawyer() -> Weight;
	fn approve_developer_lawyer() -> Weight;
	fn finalize_spv_lawyer() -> Weight;
	fn remove_from_case() -> Weight;
	fn lawyer_confirm_documents(a: u32, ) -> Weight;
	fn send_property_token() -> Weight;
}

/// Weight functions for `pallet_marketplace`.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	/// Storage: `XcavateWhitelist::WhitelistedAccounts` (r:1 w:0)
	/// Proof: `XcavateWhitelist::WhitelistedAccounts` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `Regions::RegionDetails` (r:1 w:0)
	/// Proof: `Regions::RegionDetails` (`max_values`: None, `max_size`: Some(87), added: 2562, mode: `MaxEncodedLen`)
	/// Storage: `Regions::LocationRegistration` (r:1 w:0)
	/// Proof: `Regions::LocationRegistration` (`max_values`: None, `max_size`: Some(46), added: 2521, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::NextListingId` (r:1 w:1)
	/// Proof: `Marketplace::NextListingId` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:4 w:4)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAsset::NextNftId` (r:1 w:1)
	/// Proof: `RealEstateAsset::NextNftId` (`max_values`: None, `max_size`: Some(24), added: 2499, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAsset::NextAssetId` (r:1 w:1)
	/// Proof: `RealEstateAsset::NextAssetId` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAssets::Asset` (r:1 w:1)
	/// Proof: `RealEstateAssets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::Item` (r:1 w:1)
	/// Proof: `Nfts::Item` (`max_values`: None, `max_size`: Some(861), added: 3336, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::Collection` (r:1 w:1)
	/// Proof: `Nfts::Collection` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::CollectionConfigOf` (r:1 w:0)
	/// Proof: `Nfts::CollectionConfigOf` (`max_values`: None, `max_size`: Some(73), added: 2548, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::ItemConfigOf` (r:1 w:1)
	/// Proof: `Nfts::ItemConfigOf` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::CollectionRoleOf` (r:1 w:0)
	/// Proof: `Nfts::CollectionRoleOf` (`max_values`: None, `max_size`: Some(69), added: 2544, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::ItemMetadataOf` (r:1 w:1)
	/// Proof: `Nfts::ItemMetadataOf` (`max_values`: None, `max_size`: Some(140), added: 2615, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Holds` (r:2 w:2)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(193), added: 2668, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::Attribute` (r:1 w:1)
	/// Proof: `Nfts::Attribute` (`max_values`: None, `max_size`: Some(446), added: 2921, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAssets::NextAssetId` (r:1 w:0)
	/// Proof: `RealEstateAssets::NextAssetId` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAssets::Account` (r:1 w:1)
	/// Proof: `RealEstateAssets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAssets::Metadata` (r:1 w:1)
	/// Proof: `RealEstateAssets::Metadata` (`max_values`: None, `max_size`: Some(140), added: 2615, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAsset::PropertyAssetInfo` (r:0 w:1)
	/// Proof: `RealEstateAsset::PropertyAssetInfo` (`max_values`: None, `max_size`: Some(62), added: 2537, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::OngoingObjectListing` (r:0 w:1)
	/// Proof: `Marketplace::OngoingObjectListing` (`max_values`: None, `max_size`: Some(18472), added: 20947, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::ListingDeposits` (r:0 w:1)
	/// Proof: `Marketplace::ListingDeposits` (`max_values`: None, `max_size`: Some(68), added: 2543, mode: `MaxEncodedLen`)
	/// Storage: `NftFractionalization::NftToAsset` (r:0 w:1)
	/// Proof: `NftFractionalization::NftToAsset` (`max_values`: None, `max_size`: Some(92), added: 2567, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::Account` (r:0 w:1)
	/// Proof: `Nfts::Account` (`max_values`: None, `max_size`: Some(88), added: 2563, mode: `MaxEncodedLen`)
	/// The range of component `m` is `[0, 50]`.
	fn list_object(_m: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1189`
		//  Estimated: `11402`
		// Minimum execution time: 481_640_000 picoseconds.
		Weight::from_parts(522_567_359, 0)
			.saturating_add(Weight::from_parts(0, 11402))
			.saturating_add(T::DbWeight::get().reads(23))
			.saturating_add(T::DbWeight::get().writes(22))
	}
	/// Storage: `XcavateWhitelist::WhitelistedAccounts` (r:1 w:0)
	/// Proof: `XcavateWhitelist::WhitelistedAccounts` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::OngoingObjectListing` (r:1 w:1)
	/// Proof: `Marketplace::OngoingObjectListing` (`max_values`: None, `max_size`: Some(18472), added: 20947, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAsset::PropertyAssetInfo` (r:1 w:0)
	/// Proof: `RealEstateAsset::PropertyAssetInfo` (`max_values`: None, `max_size`: Some(62), added: 2537, mode: `MaxEncodedLen`)
	/// Storage: `Regions::RegionDetails` (r:1 w:0)
	/// Proof: `Regions::RegionDetails` (`max_values`: None, `max_size`: Some(87), added: 2562, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Account` (r:1 w:1)
	/// Proof: `Assets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `AssetsHolder::BalancesOnHold` (r:1 w:1)
	/// Proof: `AssetsHolder::BalancesOnHold` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `AssetsHolder::Holds` (r:1 w:1)
	/// Proof: `AssetsHolder::Holds` (`max_values`: None, `max_size`: Some(103), added: 2578, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::TokenOwner` (r:1 w:1)
	/// Proof: `Marketplace::TokenOwner` (`max_values`: None, `max_size`: Some(154), added: 2629, mode: `MaxEncodedLen`)
	/// The range of component `a` is `[1, 249]`.
	/// The range of component `b` is `[0, 248]`.
	fn buy_property_token_single_token(_a: u32, b: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `4091 + b * (6 Â±0)`
		//  Estimated: `21937`
		// Minimum execution time: 132_014_000 picoseconds.
		Weight::from_parts(159_967_551, 0)
			.saturating_add(Weight::from_parts(0, 21937))
			// Standard Error: 2_879
			.saturating_add(Weight::from_parts(122_546, 0).saturating_mul(b.into()))
			.saturating_add(T::DbWeight::get().reads(9))
			.saturating_add(T::DbWeight::get().writes(6))
	}
	/// Storage: `XcavateWhitelist::WhitelistedAccounts` (r:1 w:0)
	/// Proof: `XcavateWhitelist::WhitelistedAccounts` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::OngoingObjectListing` (r:1 w:1)
	/// Proof: `Marketplace::OngoingObjectListing` (`max_values`: None, `max_size`: Some(18472), added: 20947, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAsset::PropertyAssetInfo` (r:1 w:0)
	/// Proof: `RealEstateAsset::PropertyAssetInfo` (`max_values`: None, `max_size`: Some(62), added: 2537, mode: `MaxEncodedLen`)
	/// Storage: `Regions::RegionDetails` (r:1 w:0)
	/// Proof: `Regions::RegionDetails` (`max_values`: None, `max_size`: Some(87), added: 2562, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Account` (r:1 w:1)
	/// Proof: `Assets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `AssetsHolder::BalancesOnHold` (r:1 w:1)
	/// Proof: `AssetsHolder::BalancesOnHold` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `AssetsHolder::Holds` (r:1 w:1)
	/// Proof: `AssetsHolder::Holds` (`max_values`: None, `max_size`: Some(103), added: 2578, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::TokenOwner` (r:1 w:1)
	/// Proof: `Marketplace::TokenOwner` (`max_values`: None, `max_size`: Some(154), added: 2629, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::PropertyLawyer` (r:0 w:1)
	/// Proof: `Marketplace::PropertyLawyer` (`max_values`: None, `max_size`: Some(171), added: 2646, mode: `MaxEncodedLen`)
	/// The range of component `b` is `[1, 250]`.
	/// The range of component `n` is `[1, 2]`.
	fn buy_property_token_all_token(b: u32, n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `3945 + b * (6 Â±0)`
		//  Estimated: `21937`
		// Minimum execution time: 144_221_000 picoseconds.
		Weight::from_parts(150_731_026, 0)
			.saturating_add(Weight::from_parts(0, 21937))
			// Standard Error: 2_578
			.saturating_add(Weight::from_parts(136_441, 0).saturating_mul(b.into()))
			// Standard Error: 418_775
			.saturating_add(Weight::from_parts(5_903_784, 0).saturating_mul(n.into()))
			.saturating_add(T::DbWeight::get().reads(9))
			.saturating_add(T::DbWeight::get().writes(7))
	}
	/// Storage: `XcavateWhitelist::WhitelistedAccounts` (r:1 w:0)
	/// Proof: `XcavateWhitelist::WhitelistedAccounts` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::OngoingObjectListing` (r:1 w:1)
	/// Proof: `Marketplace::OngoingObjectListing` (`max_values`: None, `max_size`: Some(18472), added: 20947, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::PropertyLawyer` (r:1 w:0)
	/// Proof: `Marketplace::PropertyLawyer` (`max_values`: None, `max_size`: Some(171), added: 2646, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::TokenOwner` (r:1 w:1)
	/// Proof: `Marketplace::TokenOwner` (`max_values`: None, `max_size`: Some(154), added: 2629, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Account` (r:2 w:2)
	/// Proof: `Assets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `AssetsHolder::Holds` (r:1 w:1)
	/// Proof: `AssetsHolder::Holds` (`max_values`: None, `max_size`: Some(103), added: 2578, mode: `MaxEncodedLen`)
	/// Storage: `AssetsHolder::BalancesOnHold` (r:1 w:1)
	/// Proof: `AssetsHolder::BalancesOnHold` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAssets::Asset` (r:1 w:1)
	/// Proof: `RealEstateAssets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAssets::Account` (r:2 w:2)
	/// Proof: `RealEstateAssets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:2 w:2)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAsset::PropertyOwner` (r:1 w:1)
	/// Proof: `RealEstateAsset::PropertyOwner` (`max_values`: None, `max_size`: Some(8022), added: 10497, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAsset::PropertyOwnerToken` (r:0 w:1)
	/// Proof: `RealEstateAsset::PropertyOwnerToken` (`max_values`: None, `max_size`: Some(72), added: 2547, mode: `MaxEncodedLen`)
	fn claim_property_token() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `27394`
		//  Estimated: `21937`
		// Minimum execution time: 505_601_000 picoseconds.
		Weight::from_parts(518_241_000, 0)
			.saturating_add(Weight::from_parts(0, 21937))
			.saturating_add(T::DbWeight::get().reads(15))
			.saturating_add(T::DbWeight::get().writes(14))
	}
	/// Storage: `XcavateWhitelist::WhitelistedAccounts` (r:1 w:0)
	/// Proof: `XcavateWhitelist::WhitelistedAccounts` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAsset::PropertyAssetInfo` (r:1 w:0)
	/// Proof: `RealEstateAsset::PropertyAssetInfo` (`max_values`: None, `max_size`: Some(62), added: 2537, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAssets::Asset` (r:1 w:1)
	/// Proof: `RealEstateAssets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAssets::Account` (r:2 w:2)
	/// Proof: `RealEstateAssets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:2 w:2)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::NextListingId` (r:1 w:1)
	/// Proof: `Marketplace::NextListingId` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::TokenListings` (r:0 w:1)
	/// Proof: `Marketplace::TokenListings` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	fn relist_token() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `3732`
		//  Estimated: `6208`
		// Minimum execution time: 170_419_000 picoseconds.
		Weight::from_parts(178_595_000, 0)
			.saturating_add(Weight::from_parts(0, 6208))
			.saturating_add(T::DbWeight::get().reads(8))
			.saturating_add(T::DbWeight::get().writes(7))
	}
	/// Storage: `XcavateWhitelist::WhitelistedAccounts` (r:1 w:0)
	/// Proof: `XcavateWhitelist::WhitelistedAccounts` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::TokenListings` (r:1 w:1)
	/// Proof: `Marketplace::TokenListings` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Account` (r:3 w:3)
	/// Proof: `Assets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `AssetsHolder::BalancesOnHold` (r:1 w:0)
	/// Proof: `AssetsHolder::BalancesOnHold` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAsset::PropertyOwnerToken` (r:1 w:2)
	/// Proof: `RealEstateAsset::PropertyOwnerToken` (`max_values`: None, `max_size`: Some(72), added: 2547, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAssets::Asset` (r:1 w:1)
	/// Proof: `RealEstateAssets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAssets::Account` (r:2 w:2)
	/// Proof: `RealEstateAssets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:2 w:2)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAsset::PropertyOwner` (r:1 w:1)
	/// Proof: `RealEstateAsset::PropertyOwner` (`max_values`: None, `max_size`: Some(8022), added: 10497, mode: `MaxEncodedLen`)
	fn buy_relisted_token() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `14489`
		//  Estimated: `11487`
		// Minimum execution time: 346_769_000 picoseconds.
		Weight::from_parts(353_884_000, 0)
			.saturating_add(Weight::from_parts(0, 11487))
			.saturating_add(T::DbWeight::get().reads(14))
			.saturating_add(T::DbWeight::get().writes(13))
	}
	/// Storage: `Marketplace::OngoingObjectListing` (r:1 w:1)
	/// Proof: `Marketplace::OngoingObjectListing` (`max_values`: None, `max_size`: Some(18472), added: 20947, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::PropertyLawyer` (r:1 w:0)
	/// Proof: `Marketplace::PropertyLawyer` (`max_values`: None, `max_size`: Some(171), added: 2646, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::TokenOwner` (r:1 w:1)
	/// Proof: `Marketplace::TokenOwner` (`max_values`: None, `max_size`: Some(154), added: 2629, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Account` (r:1 w:1)
	/// Proof: `Assets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `AssetsHolder::Holds` (r:1 w:1)
	/// Proof: `AssetsHolder::Holds` (`max_values`: None, `max_size`: Some(103), added: 2578, mode: `MaxEncodedLen`)
	/// Storage: `AssetsHolder::BalancesOnHold` (r:1 w:1)
	/// Proof: `AssetsHolder::BalancesOnHold` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	fn cancel_property_purchase() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `4703`
		//  Estimated: `21937`
		// Minimum execution time: 142_564_000 picoseconds.
		Weight::from_parts(149_781_000, 0)
			.saturating_add(Weight::from_parts(0, 21937))
			.saturating_add(T::DbWeight::get().reads(7))
			.saturating_add(T::DbWeight::get().writes(6))
	}
	/// Storage: `XcavateWhitelist::WhitelistedAccounts` (r:1 w:0)
	/// Proof: `XcavateWhitelist::WhitelistedAccounts` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::OngoingOffers` (r:1 w:1)
	/// Proof: `Marketplace::OngoingOffers` (`max_values`: None, `max_size`: Some(92), added: 2567, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::TokenListings` (r:1 w:0)
	/// Proof: `Marketplace::TokenListings` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Account` (r:1 w:1)
	/// Proof: `Assets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `AssetsHolder::BalancesOnHold` (r:1 w:1)
	/// Proof: `AssetsHolder::BalancesOnHold` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `AssetsHolder::Holds` (r:1 w:1)
	/// Proof: `AssetsHolder::Holds` (`max_values`: None, `max_size`: Some(103), added: 2578, mode: `MaxEncodedLen`)
	fn make_offer() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2652`
		//  Estimated: `3675`
		// Minimum execution time: 145_181_000 picoseconds.
		Weight::from_parts(153_232_000, 0)
			.saturating_add(Weight::from_parts(0, 3675))
			.saturating_add(T::DbWeight::get().reads(7))
			.saturating_add(T::DbWeight::get().writes(5))
	}
	/// Storage: `XcavateWhitelist::WhitelistedAccounts` (r:1 w:0)
	/// Proof: `XcavateWhitelist::WhitelistedAccounts` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::TokenListings` (r:1 w:0)
	/// Proof: `Marketplace::TokenListings` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::OngoingOffers` (r:1 w:1)
	/// Proof: `Marketplace::OngoingOffers` (`max_values`: None, `max_size`: Some(92), added: 2567, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Account` (r:3 w:3)
	/// Proof: `Assets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `AssetsHolder::Holds` (r:1 w:1)
	/// Proof: `AssetsHolder::Holds` (`max_values`: None, `max_size`: Some(103), added: 2578, mode: `MaxEncodedLen`)
	/// Storage: `AssetsHolder::BalancesOnHold` (r:1 w:1)
	/// Proof: `AssetsHolder::BalancesOnHold` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAsset::PropertyOwnerToken` (r:1 w:2)
	/// Proof: `RealEstateAsset::PropertyOwnerToken` (`max_values`: None, `max_size`: Some(72), added: 2547, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAssets::Asset` (r:1 w:1)
	/// Proof: `RealEstateAssets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAssets::Account` (r:2 w:2)
	/// Proof: `RealEstateAssets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:2 w:2)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAsset::PropertyOwner` (r:1 w:1)
	/// Proof: `RealEstateAsset::PropertyOwner` (`max_values`: None, `max_size`: Some(8022), added: 10497, mode: `MaxEncodedLen`)
	fn handle_offer() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `15411`
		//  Estimated: `11487`
		// Minimum execution time: 404_527_000 picoseconds.
		Weight::from_parts(415_482_000, 0)
			.saturating_add(Weight::from_parts(0, 11487))
			.saturating_add(T::DbWeight::get().reads(16))
			.saturating_add(T::DbWeight::get().writes(15))
	}
	/// Storage: `Marketplace::OngoingOffers` (r:1 w:1)
	/// Proof: `Marketplace::OngoingOffers` (`max_values`: None, `max_size`: Some(92), added: 2567, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Account` (r:1 w:1)
	/// Proof: `Assets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `AssetsHolder::Holds` (r:1 w:1)
	/// Proof: `AssetsHolder::Holds` (`max_values`: None, `max_size`: Some(103), added: 2578, mode: `MaxEncodedLen`)
	/// Storage: `AssetsHolder::BalancesOnHold` (r:1 w:1)
	/// Proof: `AssetsHolder::BalancesOnHold` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	fn cancel_offer() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1935`
		//  Estimated: `3675`
		// Minimum execution time: 116_535_000 picoseconds.
		Weight::from_parts(124_533_000, 0)
			.saturating_add(Weight::from_parts(0, 3675))
			.saturating_add(T::DbWeight::get().reads(5))
			.saturating_add(T::DbWeight::get().writes(5))
	}
	/// Storage: `Marketplace::OngoingObjectListing` (r:1 w:1)
	/// Proof: `Marketplace::OngoingObjectListing` (`max_values`: None, `max_size`: Some(18472), added: 20947, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAsset::PropertyOwnerToken` (r:1 w:1)
	/// Proof: `RealEstateAsset::PropertyOwnerToken` (`max_values`: None, `max_size`: Some(72), added: 2547, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::RefundToken` (r:1 w:1)
	/// Proof: `Marketplace::RefundToken` (`max_values`: None, `max_size`: Some(175), added: 2650, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Account` (r:4 w:4)
	/// Proof: `Assets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `AssetsHolder::BalancesOnHold` (r:1 w:1)
	/// Proof: `AssetsHolder::BalancesOnHold` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAssets::Asset` (r:1 w:1)
	/// Proof: `RealEstateAssets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAssets::Account` (r:2 w:2)
	/// Proof: `RealEstateAssets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:6 w:6)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAsset::PropertyAssetInfo` (r:1 w:1)
	/// Proof: `RealEstateAsset::PropertyAssetInfo` (`max_values`: None, `max_size`: Some(62), added: 2537, mode: `MaxEncodedLen`)
	/// Storage: `NftFractionalization::NftToAsset` (r:1 w:1)
	/// Proof: `NftFractionalization::NftToAsset` (`max_values`: None, `max_size`: Some(92), added: 2567, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::Attribute` (r:1 w:1)
	/// Proof: `Nfts::Attribute` (`max_values`: None, `max_size`: Some(446), added: 2921, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::Collection` (r:1 w:1)
	/// Proof: `Nfts::Collection` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::CollectionConfigOf` (r:1 w:0)
	/// Proof: `Nfts::CollectionConfigOf` (`max_values`: None, `max_size`: Some(73), added: 2548, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::ItemConfigOf` (r:1 w:1)
	/// Proof: `Nfts::ItemConfigOf` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::Item` (r:1 w:1)
	/// Proof: `Nfts::Item` (`max_values`: None, `max_size`: Some(861), added: 3336, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Holds` (r:2 w:2)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(193), added: 2668, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::ItemMetadataOf` (r:1 w:1)
	/// Proof: `Nfts::ItemMetadataOf` (`max_values`: None, `max_size`: Some(140), added: 2615, mode: `MaxEncodedLen`)
	/// Storage: `AssetsHolder::Holds` (r:1 w:1)
	/// Proof: `AssetsHolder::Holds` (`max_values`: None, `max_size`: Some(103), added: 2578, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::ListingDeposits` (r:1 w:1)
	/// Proof: `Marketplace::ListingDeposits` (`max_values`: None, `max_size`: Some(68), added: 2543, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAsset::PropertyOwner` (r:0 w:1)
	/// Proof: `RealEstateAsset::PropertyOwner` (`max_values`: None, `max_size`: Some(8022), added: 10497, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::Account` (r:0 w:1)
	/// Proof: `Nfts::Account` (`max_values`: None, `max_size`: Some(88), added: 2563, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::ItemPriceOf` (r:0 w:1)
	/// Proof: `Nfts::ItemPriceOf` (`max_values`: None, `max_size`: Some(89), added: 2564, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::ItemAttributesApprovalsOf` (r:0 w:1)
	/// Proof: `Nfts::ItemAttributesApprovalsOf` (`max_values`: None, `max_size`: Some(681), added: 3156, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::PendingSwapOf` (r:0 w:1)
	/// Proof: `Nfts::PendingSwapOf` (`max_values`: None, `max_size`: Some(71), added: 2546, mode: `MaxEncodedLen`)
	fn withdraw_rejected() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `3956`
		//  Estimated: `21937`
		// Minimum execution time: 732_405_000 picoseconds.
		Weight::from_parts(744_501_000, 0)
			.saturating_add(Weight::from_parts(0, 21937))
			.saturating_add(T::DbWeight::get().reads(30))
			.saturating_add(T::DbWeight::get().writes(34))
	}
	/// Storage: `Marketplace::OngoingObjectListing` (r:1 w:1)
	/// Proof: `Marketplace::OngoingObjectListing` (`max_values`: None, `max_size`: Some(18472), added: 20947, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::PropertyLawyer` (r:1 w:0)
	/// Proof: `Marketplace::PropertyLawyer` (`max_values`: None, `max_size`: Some(171), added: 2646, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::TokenOwner` (r:1 w:1)
	/// Proof: `Marketplace::TokenOwner` (`max_values`: None, `max_size`: Some(154), added: 2629, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Account` (r:1 w:1)
	/// Proof: `Assets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `AssetsHolder::Holds` (r:1 w:1)
	/// Proof: `AssetsHolder::Holds` (`max_values`: None, `max_size`: Some(103), added: 2578, mode: `MaxEncodedLen`)
	/// Storage: `AssetsHolder::BalancesOnHold` (r:1 w:1)
	/// Proof: `AssetsHolder::BalancesOnHold` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAsset::PropertyAssetInfo` (r:1 w:1)
	/// Proof: `RealEstateAsset::PropertyAssetInfo` (`max_values`: None, `max_size`: Some(62), added: 2537, mode: `MaxEncodedLen`)
	/// Storage: `NftFractionalization::NftToAsset` (r:1 w:1)
	/// Proof: `NftFractionalization::NftToAsset` (`max_values`: None, `max_size`: Some(92), added: 2567, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAssets::Asset` (r:1 w:1)
	/// Proof: `RealEstateAssets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAssets::Account` (r:1 w:1)
	/// Proof: `RealEstateAssets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:3 w:3)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::Attribute` (r:1 w:1)
	/// Proof: `Nfts::Attribute` (`max_values`: None, `max_size`: Some(446), added: 2921, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::Collection` (r:1 w:1)
	/// Proof: `Nfts::Collection` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::CollectionConfigOf` (r:1 w:0)
	/// Proof: `Nfts::CollectionConfigOf` (`max_values`: None, `max_size`: Some(73), added: 2548, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::ItemConfigOf` (r:1 w:1)
	/// Proof: `Nfts::ItemConfigOf` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::Item` (r:1 w:1)
	/// Proof: `Nfts::Item` (`max_values`: None, `max_size`: Some(861), added: 3336, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Holds` (r:2 w:2)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(193), added: 2668, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::ItemMetadataOf` (r:1 w:1)
	/// Proof: `Nfts::ItemMetadataOf` (`max_values`: None, `max_size`: Some(140), added: 2615, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::ListingDeposits` (r:1 w:1)
	/// Proof: `Marketplace::ListingDeposits` (`max_values`: None, `max_size`: Some(68), added: 2543, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::Account` (r:0 w:1)
	/// Proof: `Nfts::Account` (`max_values`: None, `max_size`: Some(88), added: 2563, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::ItemPriceOf` (r:0 w:1)
	/// Proof: `Nfts::ItemPriceOf` (`max_values`: None, `max_size`: Some(89), added: 2564, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::ItemAttributesApprovalsOf` (r:0 w:1)
	/// Proof: `Nfts::ItemAttributesApprovalsOf` (`max_values`: None, `max_size`: Some(681), added: 3156, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::PendingSwapOf` (r:0 w:1)
	/// Proof: `Nfts::PendingSwapOf` (`max_values`: None, `max_size`: Some(71), added: 2546, mode: `MaxEncodedLen`)
	fn withdraw_expired() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `3761`
		//  Estimated: `21937`
		// Minimum execution time: 517_922_000 picoseconds.
		Weight::from_parts(539_488_000, 0)
			.saturating_add(Weight::from_parts(0, 21937))
			.saturating_add(T::DbWeight::get().reads(23))
			.saturating_add(T::DbWeight::get().writes(25))
	}
	/// Storage: `Marketplace::OngoingObjectListing` (r:1 w:1)
	/// Proof: `Marketplace::OngoingObjectListing` (`max_values`: None, `max_size`: Some(18472), added: 20947, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::PropertyLawyer` (r:1 w:0)
	/// Proof: `Marketplace::PropertyLawyer` (`max_values`: None, `max_size`: Some(171), added: 2646, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAsset::PropertyAssetInfo` (r:1 w:1)
	/// Proof: `RealEstateAsset::PropertyAssetInfo` (`max_values`: None, `max_size`: Some(62), added: 2537, mode: `MaxEncodedLen`)
	/// Storage: `NftFractionalization::NftToAsset` (r:1 w:1)
	/// Proof: `NftFractionalization::NftToAsset` (`max_values`: None, `max_size`: Some(92), added: 2567, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAssets::Asset` (r:1 w:1)
	/// Proof: `RealEstateAssets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAssets::Account` (r:1 w:1)
	/// Proof: `RealEstateAssets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:3 w:3)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::Attribute` (r:1 w:1)
	/// Proof: `Nfts::Attribute` (`max_values`: None, `max_size`: Some(446), added: 2921, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::Collection` (r:1 w:1)
	/// Proof: `Nfts::Collection` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::CollectionConfigOf` (r:1 w:0)
	/// Proof: `Nfts::CollectionConfigOf` (`max_values`: None, `max_size`: Some(73), added: 2548, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::ItemConfigOf` (r:1 w:1)
	/// Proof: `Nfts::ItemConfigOf` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::Item` (r:1 w:1)
	/// Proof: `Nfts::Item` (`max_values`: None, `max_size`: Some(861), added: 3336, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Holds` (r:2 w:2)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(193), added: 2668, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::ItemMetadataOf` (r:1 w:1)
	/// Proof: `Nfts::ItemMetadataOf` (`max_values`: None, `max_size`: Some(140), added: 2615, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::ListingDeposits` (r:1 w:1)
	/// Proof: `Marketplace::ListingDeposits` (`max_values`: None, `max_size`: Some(68), added: 2543, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::Account` (r:0 w:1)
	/// Proof: `Nfts::Account` (`max_values`: None, `max_size`: Some(88), added: 2563, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::ItemPriceOf` (r:0 w:1)
	/// Proof: `Nfts::ItemPriceOf` (`max_values`: None, `max_size`: Some(89), added: 2564, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::ItemAttributesApprovalsOf` (r:0 w:1)
	/// Proof: `Nfts::ItemAttributesApprovalsOf` (`max_values`: None, `max_size`: Some(681), added: 3156, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::PendingSwapOf` (r:0 w:1)
	/// Proof: `Nfts::PendingSwapOf` (`max_values`: None, `max_size`: Some(71), added: 2546, mode: `MaxEncodedLen`)
	fn withdraw_deposit_unsold() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2445`
		//  Estimated: `21937`
		// Minimum execution time: 497_274_000 picoseconds.
		Weight::from_parts(505_454_000, 0)
			.saturating_add(Weight::from_parts(0, 21937))
			.saturating_add(T::DbWeight::get().reads(18))
			.saturating_add(T::DbWeight::get().writes(20))
	}
	/// Storage: `XcavateWhitelist::WhitelistedAccounts` (r:1 w:0)
	/// Proof: `XcavateWhitelist::WhitelistedAccounts` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::TokenListings` (r:1 w:1)
	/// Proof: `Marketplace::TokenListings` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	fn upgrade_listing() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1243`
		//  Estimated: `3549`
		// Minimum execution time: 58_136_000 picoseconds.
		Weight::from_parts(60_620_000, 0)
			.saturating_add(Weight::from_parts(0, 3549))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `XcavateWhitelist::WhitelistedAccounts` (r:1 w:0)
	/// Proof: `XcavateWhitelist::WhitelistedAccounts` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::PropertyLawyer` (r:1 w:0)
	/// Proof: `Marketplace::PropertyLawyer` (`max_values`: None, `max_size`: Some(171), added: 2646, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::OngoingObjectListing` (r:1 w:1)
	/// Proof: `Marketplace::OngoingObjectListing` (`max_values`: None, `max_size`: Some(18472), added: 20947, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAsset::PropertyAssetInfo` (r:1 w:0)
	/// Proof: `RealEstateAsset::PropertyAssetInfo` (`max_values`: None, `max_size`: Some(62), added: 2537, mode: `MaxEncodedLen`)
	fn upgrade_object() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `655`
		//  Estimated: `21937`
		// Minimum execution time: 55_135_000 picoseconds.
		Weight::from_parts(57_157_000, 0)
			.saturating_add(Weight::from_parts(0, 21937))
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `XcavateWhitelist::WhitelistedAccounts` (r:1 w:0)
	/// Proof: `XcavateWhitelist::WhitelistedAccounts` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::TokenListings` (r:1 w:1)
	/// Proof: `Marketplace::TokenListings` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAssets::Asset` (r:1 w:1)
	/// Proof: `RealEstateAssets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAssets::Account` (r:2 w:2)
	/// Proof: `RealEstateAssets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:2 w:2)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	fn delist_token() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `3626`
		//  Estimated: `6208`
		// Minimum execution time: 154_873_000 picoseconds.
		Weight::from_parts(167_106_000, 0)
			.saturating_add(Weight::from_parts(0, 6208))
			.saturating_add(T::DbWeight::get().reads(7))
			.saturating_add(T::DbWeight::get().writes(6))
	}
	/// Storage: `Regions::RealEstateLawyer` (r:1 w:0)
	/// Proof: `Regions::RealEstateLawyer` (`max_values`: None, `max_size`: Some(50), added: 2525, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::PropertyLawyer` (r:1 w:0)
	/// Proof: `Marketplace::PropertyLawyer` (`max_values`: None, `max_size`: Some(171), added: 2646, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::OngoingObjectListing` (r:1 w:0)
	/// Proof: `Marketplace::OngoingObjectListing` (`max_values`: None, `max_size`: Some(18472), added: 20947, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAsset::PropertyAssetInfo` (r:1 w:0)
	/// Proof: `RealEstateAsset::PropertyAssetInfo` (`max_values`: None, `max_size`: Some(62), added: 2537, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::SpvLawyerProposal` (r:1 w:1)
	/// Proof: `Marketplace::SpvLawyerProposal` (`max_values`: None, `max_size`: Some(76), added: 2551, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::ProposedLawyers` (r:1 w:0)
	/// Proof: `Marketplace::ProposedLawyers` (`max_values`: None, `max_size`: Some(68), added: 2543, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::OngoingLawyerVoting` (r:0 w:1)
	/// Proof: `Marketplace::OngoingLawyerVoting` (`max_values`: None, `max_size`: Some(28), added: 2503, mode: `MaxEncodedLen`)
	fn lawyer_claim_property() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `14209`
		//  Estimated: `21937`
		// Minimum execution time: 239_278_000 picoseconds.
		Weight::from_parts(249_934_000, 0)
			.saturating_add(Weight::from_parts(0, 21937))
			.saturating_add(T::DbWeight::get().reads(6))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: `Marketplace::SpvLawyerProposal` (r:1 w:0)
	/// Proof: `Marketplace::SpvLawyerProposal` (`max_values`: None, `max_size`: Some(76), added: 2551, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAsset::PropertyOwnerToken` (r:1 w:0)
	/// Proof: `RealEstateAsset::PropertyOwnerToken` (`max_values`: None, `max_size`: Some(72), added: 2547, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::OngoingLawyerVoting` (r:1 w:1)
	/// Proof: `Marketplace::OngoingLawyerVoting` (`max_values`: None, `max_size`: Some(28), added: 2503, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::UserLawyerVote` (r:1 w:1)
	/// Proof: `Marketplace::UserLawyerVote` (`max_values`: None, `max_size`: Some(69), added: 2544, mode: `MaxEncodedLen`)
	fn vote_on_spv_lawyer() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1432`
		//  Estimated: `3541`
		// Minimum execution time: 72_494_000 picoseconds.
		Weight::from_parts(77_081_000, 0)
			.saturating_add(Weight::from_parts(0, 3541))
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: `Marketplace::OngoingObjectListing` (r:1 w:0)
	/// Proof: `Marketplace::OngoingObjectListing` (`max_values`: None, `max_size`: Some(18472), added: 20947, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::PropertyLawyer` (r:1 w:1)
	/// Proof: `Marketplace::PropertyLawyer` (`max_values`: None, `max_size`: Some(171), added: 2646, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::ProposedLawyers` (r:1 w:1)
	/// Proof: `Marketplace::ProposedLawyers` (`max_values`: None, `max_size`: Some(68), added: 2543, mode: `MaxEncodedLen`)
	fn approve_developer_lawyer() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `13859`
		//  Estimated: `21937`
		// Minimum execution time: 213_148_000 picoseconds.
		Weight::from_parts(225_465_000, 0)
			.saturating_add(Weight::from_parts(0, 21937))
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: `XcavateWhitelist::WhitelistedAccounts` (r:1 w:0)
	/// Proof: `XcavateWhitelist::WhitelistedAccounts` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::SpvLawyerProposal` (r:1 w:1)
	/// Proof: `Marketplace::SpvLawyerProposal` (`max_values`: None, `max_size`: Some(76), added: 2551, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::OngoingLawyerVoting` (r:1 w:1)
	/// Proof: `Marketplace::OngoingLawyerVoting` (`max_values`: None, `max_size`: Some(28), added: 2503, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::OngoingObjectListing` (r:1 w:0)
	/// Proof: `Marketplace::OngoingObjectListing` (`max_values`: None, `max_size`: Some(18472), added: 20947, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::PropertyLawyer` (r:1 w:1)
	/// Proof: `Marketplace::PropertyLawyer` (`max_values`: None, `max_size`: Some(171), added: 2646, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::UserLawyerVote` (r:1 w:1)
	/// Proof: `Marketplace::UserLawyerVote` (`max_values`: None, `max_size`: Some(69), added: 2544, mode: `MaxEncodedLen`)
	fn finalize_spv_lawyer() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `15032`
		//  Estimated: `21937`
		// Minimum execution time: 251_845_000 picoseconds.
		Weight::from_parts(265_363_000, 0)
			.saturating_add(Weight::from_parts(0, 21937))
			.saturating_add(T::DbWeight::get().reads(6))
			.saturating_add(T::DbWeight::get().writes(4))
	}
	/// Storage: `Regions::RealEstateLawyer` (r:1 w:0)
	/// Proof: `Regions::RealEstateLawyer` (`max_values`: None, `max_size`: Some(50), added: 2525, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::PropertyLawyer` (r:1 w:1)
	/// Proof: `Marketplace::PropertyLawyer` (`max_values`: None, `max_size`: Some(171), added: 2646, mode: `MaxEncodedLen`)
	fn remove_from_case() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `631`
		//  Estimated: `3636`
		// Minimum execution time: 57_110_000 picoseconds.
		Weight::from_parts(69_984_000, 0)
			.saturating_add(Weight::from_parts(0, 3636))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `Marketplace::PropertyLawyer` (r:1 w:1)
	/// Proof: `Marketplace::PropertyLawyer` (`max_values`: None, `max_size`: Some(171), added: 2646, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::OngoingObjectListing` (r:1 w:1)
	/// Proof: `Marketplace::OngoingObjectListing` (`max_values`: None, `max_size`: Some(18472), added: 20947, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAsset::PropertyAssetInfo` (r:1 w:1)
	/// Proof: `RealEstateAsset::PropertyAssetInfo` (`max_values`: None, `max_size`: Some(62), added: 2537, mode: `MaxEncodedLen`)
	/// Storage: `Regions::RegionDetails` (r:1 w:0)
	/// Proof: `Regions::RegionDetails` (`max_values`: None, `max_size`: Some(87), added: 2562, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Account` (r:5 w:5)
	/// Proof: `Assets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `AssetsHolder::BalancesOnHold` (r:1 w:1)
	/// Proof: `AssetsHolder::BalancesOnHold` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:5 w:5)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `AssetsHolder::Holds` (r:1 w:1)
	/// Proof: `AssetsHolder::Holds` (`max_values`: None, `max_size`: Some(103), added: 2578, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::ListingDeposits` (r:1 w:1)
	/// Proof: `Marketplace::ListingDeposits` (`max_values`: None, `max_size`: Some(68), added: 2543, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Holds` (r:1 w:1)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(193), added: 2668, mode: `MaxEncodedLen`)
	/// The range of component `a` is `[1, 250]`.
	fn lawyer_confirm_documents(a: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2883 + a * (64 Â±0)`
		//  Estimated: `21937`
		// Minimum execution time: 441_112_000 picoseconds.
		Weight::from_parts(466_393_189, 0)
			.saturating_add(Weight::from_parts(0, 21937))
			// Standard Error: 8_771
			.saturating_add(Weight::from_parts(841_017, 0).saturating_mul(a.into()))
			.saturating_add(T::DbWeight::get().reads(19))
			.saturating_add(T::DbWeight::get().writes(18))
	}
	/// Storage: `XcavateWhitelist::WhitelistedAccounts` (r:2 w:0)
	/// Proof: `XcavateWhitelist::WhitelistedAccounts` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAsset::PropertyOwnerToken` (r:1 w:2)
	/// Proof: `RealEstateAsset::PropertyOwnerToken` (`max_values`: None, `max_size`: Some(72), added: 2547, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAssets::Asset` (r:1 w:1)
	/// Proof: `RealEstateAssets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAssets::Account` (r:2 w:2)
	/// Proof: `RealEstateAssets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:2 w:2)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAsset::PropertyOwner` (r:1 w:1)
	/// Proof: `RealEstateAsset::PropertyOwner` (`max_values`: None, `max_size`: Some(8022), added: 10497, mode: `MaxEncodedLen`)
	fn send_property_token() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `12920`
		//  Estimated: `11487`
		// Minimum execution time: 224_352_000 picoseconds.
		Weight::from_parts(236_122_000, 0)
			.saturating_add(Weight::from_parts(0, 11487))
			.saturating_add(T::DbWeight::get().reads(9))
			.saturating_add(T::DbWeight::get().writes(8))
	}
}


//! Autogenerated weights for `pallet_marketplace`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 47.2.0
//! DATE: 2025-09-05, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `recrafter-Legion-5-16IRX9`, CPU: `Intel(R) Core(TM) i7-14650HX`
//! WASM-EXECUTION: `Compiled`, CHAIN: `None`, DB CACHE: 1024

// Executed Command:
// ./target/release/parachain-template-node
// benchmark
// pallet
// --pallet
// pallet_marketplace
// --extrinsic
// *
// --steps
// 50
// --repeat
// 20
// --output
// ./pallets/marketplace/src/weights.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::Weight};
use core::marker::PhantomData;

pub trait WeightInfo {
	fn list_property(_m: u32, ) -> Weight;
	fn buy_property_token_single_token(a: u32, b: u32, ) -> Weight;
	fn buy_property_token_all_token(b: u32, _n: u32, ) -> Weight;
	fn claim_property_token() -> Weight;
	fn finalize_claim_window() -> Weight;
	fn create_spv() -> Weight;
	fn relist_token() -> Weight;
	fn buy_relisted_token() -> Weight;
	fn cancel_property_purchase() -> Weight;
	fn make_offer() -> Weight;
	fn handle_offer() -> Weight;
	fn cancel_offer() -> Weight;
	fn withdraw_rejected() -> Weight;
	fn withdraw_legal_process_expired() -> Weight;
	fn withdraw_expired() -> Weight;
	fn withdraw_deposit_unsold() -> Weight;
	fn withdraw_claiming_expired() -> Weight;
	fn withdraw_unclaimed() -> Weight;
	fn upgrade_object() -> Weight;
	fn delist_token() -> Weight;
	fn lawyer_claim_property() -> Weight;
	fn vote_on_spv_lawyer() -> Weight;
	fn approve_developer_lawyer() -> Weight;
	fn finalize_spv_lawyer() -> Weight;
	fn unfreeze_spv_lawyer_token() -> Weight;
	fn remove_lawyer_claim() -> Weight;
	fn lawyer_confirm_documents(a: u32, ) -> Weight;
	fn send_property_token() -> Weight;
}

/// Weight functions for `pallet_marketplace`.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	/// Storage: `XcavateWhitelist::AccountRoles` (r:1 w:0)
	/// Proof: `XcavateWhitelist::AccountRoles` (`max_values`: None, `max_size`: Some(66), added: 2541, mode: `MaxEncodedLen`)
	/// Storage: `Regions::RegionDetails` (r:1 w:0)
	/// Proof: `Regions::RegionDetails` (`max_values`: None, `max_size`: Some(87), added: 2562, mode: `MaxEncodedLen`)
	/// Storage: `Regions::LocationRegistration` (r:1 w:0)
	/// Proof: `Regions::LocationRegistration` (`max_values`: None, `max_size`: Some(46), added: 2521, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::NextListingId` (r:1 w:1)
	/// Proof: `Marketplace::NextListingId` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:4 w:4)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAsset::NextNftId` (r:1 w:1)
	/// Proof: `RealEstateAsset::NextNftId` (`max_values`: None, `max_size`: Some(24), added: 2499, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAsset::NextAssetId` (r:1 w:1)
	/// Proof: `RealEstateAsset::NextAssetId` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAssets::Asset` (r:1 w:1)
	/// Proof: `RealEstateAssets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::Item` (r:1 w:1)
	/// Proof: `Nfts::Item` (`max_values`: None, `max_size`: Some(861), added: 3336, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::Collection` (r:1 w:1)
	/// Proof: `Nfts::Collection` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::CollectionConfigOf` (r:1 w:0)
	/// Proof: `Nfts::CollectionConfigOf` (`max_values`: None, `max_size`: Some(73), added: 2548, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::ItemConfigOf` (r:1 w:1)
	/// Proof: `Nfts::ItemConfigOf` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::CollectionRoleOf` (r:1 w:0)
	/// Proof: `Nfts::CollectionRoleOf` (`max_values`: None, `max_size`: Some(69), added: 2544, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::ItemMetadataOf` (r:1 w:1)
	/// Proof: `Nfts::ItemMetadataOf` (`max_values`: None, `max_size`: Some(140), added: 2615, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Holds` (r:2 w:2)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(247), added: 2722, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::Attribute` (r:1 w:1)
	/// Proof: `Nfts::Attribute` (`max_values`: None, `max_size`: Some(446), added: 2921, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAssets::NextAssetId` (r:1 w:0)
	/// Proof: `RealEstateAssets::NextAssetId` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAssets::Account` (r:1 w:1)
	/// Proof: `RealEstateAssets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAssets::Metadata` (r:1 w:1)
	/// Proof: `RealEstateAssets::Metadata` (`max_values`: None, `max_size`: Some(140), added: 2615, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAsset::PropertyAssetInfo` (r:0 w:1)
	/// Proof: `RealEstateAsset::PropertyAssetInfo` (`max_values`: None, `max_size`: Some(63), added: 2538, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::OngoingObjectListing` (r:0 w:1)
	/// Proof: `Marketplace::OngoingObjectListing` (`max_values`: None, `max_size`: Some(28732), added: 31207, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::ListingDeposits` (r:0 w:1)
	/// Proof: `Marketplace::ListingDeposits` (`max_values`: None, `max_size`: Some(68), added: 2543, mode: `MaxEncodedLen`)
	/// Storage: `NftFractionalization::NftToAsset` (r:0 w:1)
	/// Proof: `NftFractionalization::NftToAsset` (`max_values`: None, `max_size`: Some(92), added: 2567, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::Account` (r:0 w:1)
	/// Proof: `Nfts::Account` (`max_values`: None, `max_size`: Some(88), added: 2563, mode: `MaxEncodedLen`)
	/// The range of component `m` is `[0, 50]`.
	fn list_property(m: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1337`
		//  Estimated: `11402`
		// Minimum execution time: 509_965_000 picoseconds.
		Weight::from_parts(552_558_197, 0)
			.saturating_add(Weight::from_parts(0, 11402))
			// Standard Error: 71_826
			.saturating_add(Weight::from_parts(692_330, 0).saturating_mul(m.into()))
			.saturating_add(T::DbWeight::get().reads(23))
			.saturating_add(T::DbWeight::get().writes(22))
	}
	/// Storage: `XcavateWhitelist::AccountRoles` (r:1 w:0)
	/// Proof: `XcavateWhitelist::AccountRoles` (`max_values`: None, `max_size`: Some(66), added: 2541, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::OngoingObjectListing` (r:1 w:1)
	/// Proof: `Marketplace::OngoingObjectListing` (`max_values`: None, `max_size`: Some(28732), added: 31207, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAsset::PropertyAssetInfo` (r:1 w:0)
	/// Proof: `RealEstateAsset::PropertyAssetInfo` (`max_values`: None, `max_size`: Some(63), added: 2538, mode: `MaxEncodedLen`)
	/// Storage: `Regions::RegionDetails` (r:1 w:0)
	/// Proof: `Regions::RegionDetails` (`max_values`: None, `max_size`: Some(87), added: 2562, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Account` (r:1 w:1)
	/// Proof: `Assets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `AssetsHolder::BalancesOnHold` (r:1 w:1)
	/// Proof: `AssetsHolder::BalancesOnHold` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `AssetsHolder::Holds` (r:1 w:1)
	/// Proof: `AssetsHolder::Holds` (`max_values`: None, `max_size`: Some(103), added: 2578, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::TokenOwner` (r:1 w:1)
	/// Proof: `Marketplace::TokenOwner` (`max_values`: None, `max_size`: Some(155), added: 2630, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAsset::PropertyOwnerToken` (r:1 w:0)
	/// Proof: `RealEstateAsset::PropertyOwnerToken` (`max_values`: None, `max_size`: Some(72), added: 2547, mode: `MaxEncodedLen`)
	/// The range of component `a` is `[1, 249]`.
	/// The range of component `b` is `[0, 248]`.
	fn buy_property_token_single_token(a: u32, b: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `4212 + b * (6 Â±0)`
		//  Estimated: `32197`
		// Minimum execution time: 158_018_000 picoseconds.
		Weight::from_parts(189_086_637, 0)
			.saturating_add(Weight::from_parts(0, 32197))
			// Standard Error: 4_336
			.saturating_add(Weight::from_parts(16_706, 0).saturating_mul(a.into()))
			// Standard Error: 4_336
			.saturating_add(Weight::from_parts(234_391, 0).saturating_mul(b.into()))
			.saturating_add(T::DbWeight::get().reads(10))
			.saturating_add(T::DbWeight::get().writes(6))
	}
	/// Storage: `XcavateWhitelist::AccountRoles` (r:1 w:0)
	/// Proof: `XcavateWhitelist::AccountRoles` (`max_values`: None, `max_size`: Some(66), added: 2541, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::OngoingObjectListing` (r:1 w:1)
	/// Proof: `Marketplace::OngoingObjectListing` (`max_values`: None, `max_size`: Some(28732), added: 31207, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAsset::PropertyAssetInfo` (r:1 w:0)
	/// Proof: `RealEstateAsset::PropertyAssetInfo` (`max_values`: None, `max_size`: Some(63), added: 2538, mode: `MaxEncodedLen`)
	/// Storage: `Regions::RegionDetails` (r:1 w:0)
	/// Proof: `Regions::RegionDetails` (`max_values`: None, `max_size`: Some(87), added: 2562, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Account` (r:1 w:1)
	/// Proof: `Assets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `AssetsHolder::BalancesOnHold` (r:1 w:1)
	/// Proof: `AssetsHolder::BalancesOnHold` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `AssetsHolder::Holds` (r:1 w:1)
	/// Proof: `AssetsHolder::Holds` (`max_values`: None, `max_size`: Some(103), added: 2578, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::TokenOwner` (r:1 w:1)
	/// Proof: `Marketplace::TokenOwner` (`max_values`: None, `max_size`: Some(155), added: 2630, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAsset::PropertyOwnerToken` (r:1 w:0)
	/// Proof: `RealEstateAsset::PropertyOwnerToken` (`max_values`: None, `max_size`: Some(72), added: 2547, mode: `MaxEncodedLen`)
	/// The range of component `b` is `[1, 250]`.
	/// The range of component `n` is `[1, 2]`.
	fn buy_property_token_all_token(b: u32, n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `4053 + b * (6 Â±0)`
		//  Estimated: `32197`
		// Minimum execution time: 161_679_000 picoseconds.
		Weight::from_parts(174_444_186, 0)
			.saturating_add(Weight::from_parts(0, 32197))
			// Standard Error: 5_212
			.saturating_add(Weight::from_parts(252_909, 0).saturating_mul(b.into()))
			// Standard Error: 846_562
			.saturating_add(Weight::from_parts(10_643_023, 0).saturating_mul(n.into()))
			.saturating_add(T::DbWeight::get().reads(10))
			.saturating_add(T::DbWeight::get().writes(6))
	}
	/// Storage: `XcavateWhitelist::AccountRoles` (r:1 w:0)
	/// Proof: `XcavateWhitelist::AccountRoles` (`max_values`: None, `max_size`: Some(66), added: 2541, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::OngoingObjectListing` (r:1 w:1)
	/// Proof: `Marketplace::OngoingObjectListing` (`max_values`: None, `max_size`: Some(28732), added: 31207, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::TokenOwner` (r:1 w:1)
	/// Proof: `Marketplace::TokenOwner` (`max_values`: None, `max_size`: Some(155), added: 2630, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAsset::PropertyAssetInfo` (r:1 w:0)
	/// Proof: `RealEstateAsset::PropertyAssetInfo` (`max_values`: None, `max_size`: Some(63), added: 2538, mode: `MaxEncodedLen`)
	/// Storage: `Regions::RegionDetails` (r:1 w:0)
	/// Proof: `Regions::RegionDetails` (`max_values`: None, `max_size`: Some(87), added: 2562, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Account` (r:2 w:2)
	/// Proof: `Assets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `AssetsHolder::Holds` (r:1 w:1)
	/// Proof: `AssetsHolder::Holds` (`max_values`: None, `max_size`: Some(103), added: 2578, mode: `MaxEncodedLen`)
	/// Storage: `AssetsHolder::BalancesOnHold` (r:1 w:1)
	/// Proof: `AssetsHolder::BalancesOnHold` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAssets::Asset` (r:1 w:1)
	/// Proof: `RealEstateAssets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAssets::Account` (r:2 w:2)
	/// Proof: `RealEstateAssets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `AssetsFreezer::FrozenBalances` (r:1 w:1)
	/// Proof: `AssetsFreezer::FrozenBalances` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:2 w:2)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `AssetsFreezer::Freezes` (r:1 w:1)
	/// Proof: `AssetsFreezer::Freezes` (`max_values`: None, `max_size`: Some(137), added: 2612, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAsset::PropertyOwner` (r:1 w:1)
	/// Proof: `RealEstateAsset::PropertyOwner` (`max_values`: None, `max_size`: Some(8022), added: 10497, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAsset::PropertyOwnerToken` (r:1 w:1)
	/// Proof: `RealEstateAsset::PropertyOwnerToken` (`max_values`: None, `max_size`: Some(72), added: 2547, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::PropertyLawyer` (r:1 w:1)
	/// Proof: `Marketplace::PropertyLawyer` (`max_values`: None, `max_size`: Some(175), added: 2650, mode: `MaxEncodedLen`)
	fn claim_property_token() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `33778`
		//  Estimated: `32197`
		// Minimum execution time: 774_992_000 picoseconds.
		Weight::from_parts(841_201_000, 0)
			.saturating_add(Weight::from_parts(0, 32197))
			.saturating_add(T::DbWeight::get().reads(20))
			.saturating_add(T::DbWeight::get().writes(17))
	}
	/// Storage: `XcavateWhitelist::AccountRoles` (r:1 w:0)
	/// Proof: `XcavateWhitelist::AccountRoles` (`max_values`: None, `max_size`: Some(66), added: 2541, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::OngoingObjectListing` (r:1 w:1)
	/// Proof: `Marketplace::OngoingObjectListing` (`max_values`: None, `max_size`: Some(28732), added: 31207, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::RefundClaimedToken` (r:0 w:1)
	/// Proof: `Marketplace::RefundClaimedToken` (`max_values`: None, `max_size`: Some(24), added: 2499, mode: `MaxEncodedLen`)
	fn finalize_claim_window() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `19938`
		//  Estimated: `32197`
		// Minimum execution time: 406_647_000 picoseconds.
		Weight::from_parts(451_564_000, 0)
			.saturating_add(Weight::from_parts(0, 32197))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: `XcavateWhitelist::AccountRoles` (r:1 w:0)
	/// Proof: `XcavateWhitelist::AccountRoles` (`max_values`: None, `max_size`: Some(66), added: 2541, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::OngoingObjectListing` (r:1 w:0)
	/// Proof: `Marketplace::OngoingObjectListing` (`max_values`: None, `max_size`: Some(28732), added: 31207, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::PropertyLawyer` (r:1 w:0)
	/// Proof: `Marketplace::PropertyLawyer` (`max_values`: None, `max_size`: Some(175), added: 2650, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAsset::PropertyAssetInfo` (r:1 w:1)
	/// Proof: `RealEstateAsset::PropertyAssetInfo` (`max_values`: None, `max_size`: Some(63), added: 2538, mode: `MaxEncodedLen`)
	fn create_spv() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `20294`
		//  Estimated: `32197`
		// Minimum execution time: 393_720_000 picoseconds.
		Weight::from_parts(453_459_000, 0)
			.saturating_add(Weight::from_parts(0, 32197))
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `XcavateWhitelist::AccountRoles` (r:1 w:0)
	/// Proof: `XcavateWhitelist::AccountRoles` (`max_values`: None, `max_size`: Some(66), added: 2541, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAsset::PropertyAssetInfo` (r:1 w:0)
	/// Proof: `RealEstateAsset::PropertyAssetInfo` (`max_values`: None, `max_size`: Some(63), added: 2538, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAssets::Asset` (r:1 w:1)
	/// Proof: `RealEstateAssets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAssets::Account` (r:2 w:2)
	/// Proof: `RealEstateAssets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `AssetsFreezer::FrozenBalances` (r:1 w:1)
	/// Proof: `AssetsFreezer::FrozenBalances` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:2 w:2)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `AssetsFreezer::Freezes` (r:1 w:1)
	/// Proof: `AssetsFreezer::Freezes` (`max_values`: None, `max_size`: Some(137), added: 2612, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::NextListingId` (r:1 w:1)
	/// Proof: `Marketplace::NextListingId` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::TokenListings` (r:0 w:1)
	/// Proof: `Marketplace::TokenListings` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	fn relist_token() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `5683`
		//  Estimated: `6208`
		// Minimum execution time: 258_957_000 picoseconds.
		Weight::from_parts(281_753_000, 0)
			.saturating_add(Weight::from_parts(0, 6208))
			.saturating_add(T::DbWeight::get().reads(10))
			.saturating_add(T::DbWeight::get().writes(9))
	}
	/// Storage: `XcavateWhitelist::AccountRoles` (r:1 w:0)
	/// Proof: `XcavateWhitelist::AccountRoles` (`max_values`: None, `max_size`: Some(66), added: 2541, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::TokenListings` (r:1 w:1)
	/// Proof: `Marketplace::TokenListings` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAsset::PropertyAssetInfo` (r:1 w:0)
	/// Proof: `RealEstateAsset::PropertyAssetInfo` (`max_values`: None, `max_size`: Some(63), added: 2538, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAsset::PropertyOwnerToken` (r:2 w:2)
	/// Proof: `RealEstateAsset::PropertyOwnerToken` (`max_values`: None, `max_size`: Some(72), added: 2547, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Account` (r:3 w:3)
	/// Proof: `Assets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `AssetsHolder::BalancesOnHold` (r:1 w:0)
	/// Proof: `AssetsHolder::BalancesOnHold` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAssets::Asset` (r:1 w:1)
	/// Proof: `RealEstateAssets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAssets::Account` (r:2 w:2)
	/// Proof: `RealEstateAssets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `AssetsFreezer::FrozenBalances` (r:1 w:1)
	/// Proof: `AssetsFreezer::FrozenBalances` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:2 w:2)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `AssetsFreezer::Freezes` (r:1 w:1)
	/// Proof: `AssetsFreezer::Freezes` (`max_values`: None, `max_size`: Some(137), added: 2612, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAsset::PropertyOwner` (r:1 w:1)
	/// Proof: `RealEstateAsset::PropertyOwner` (`max_values`: None, `max_size`: Some(8022), added: 10497, mode: `MaxEncodedLen`)
	fn buy_relisted_token() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `16240`
		//  Estimated: `11487`
		// Minimum execution time: 453_591_000 picoseconds.
		Weight::from_parts(482_493_000, 0)
			.saturating_add(Weight::from_parts(0, 11487))
			.saturating_add(T::DbWeight::get().reads(18))
			.saturating_add(T::DbWeight::get().writes(15))
	}
	/// Storage: `XcavateWhitelist::AccountRoles` (r:1 w:0)
	/// Proof: `XcavateWhitelist::AccountRoles` (`max_values`: None, `max_size`: Some(66), added: 2541, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::OngoingObjectListing` (r:1 w:1)
	/// Proof: `Marketplace::OngoingObjectListing` (`max_values`: None, `max_size`: Some(28732), added: 31207, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::TokenOwner` (r:1 w:1)
	/// Proof: `Marketplace::TokenOwner` (`max_values`: None, `max_size`: Some(155), added: 2630, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Account` (r:1 w:1)
	/// Proof: `Assets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `AssetsHolder::Holds` (r:1 w:1)
	/// Proof: `AssetsHolder::Holds` (`max_values`: None, `max_size`: Some(103), added: 2578, mode: `MaxEncodedLen`)
	/// Storage: `AssetsHolder::BalancesOnHold` (r:1 w:1)
	/// Proof: `AssetsHolder::BalancesOnHold` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	fn cancel_property_purchase() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `5679`
		//  Estimated: `32197`
		// Minimum execution time: 174_489_000 picoseconds.
		Weight::from_parts(198_406_000, 0)
			.saturating_add(Weight::from_parts(0, 32197))
			.saturating_add(T::DbWeight::get().reads(7))
			.saturating_add(T::DbWeight::get().writes(6))
	}
	/// Storage: `XcavateWhitelist::AccountRoles` (r:1 w:0)
	/// Proof: `XcavateWhitelist::AccountRoles` (`max_values`: None, `max_size`: Some(66), added: 2541, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::OngoingOffers` (r:1 w:1)
	/// Proof: `Marketplace::OngoingOffers` (`max_values`: None, `max_size`: Some(92), added: 2567, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::TokenListings` (r:1 w:0)
	/// Proof: `Marketplace::TokenListings` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Account` (r:1 w:1)
	/// Proof: `Assets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `AssetsHolder::BalancesOnHold` (r:1 w:1)
	/// Proof: `AssetsHolder::BalancesOnHold` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `AssetsHolder::Holds` (r:1 w:1)
	/// Proof: `AssetsHolder::Holds` (`max_values`: None, `max_size`: Some(103), added: 2578, mode: `MaxEncodedLen`)
	fn make_offer() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2768`
		//  Estimated: `3675`
		// Minimum execution time: 184_202_000 picoseconds.
		Weight::from_parts(199_104_000, 0)
			.saturating_add(Weight::from_parts(0, 3675))
			.saturating_add(T::DbWeight::get().reads(7))
			.saturating_add(T::DbWeight::get().writes(5))
	}
	/// Storage: `XcavateWhitelist::AccountRoles` (r:1 w:0)
	/// Proof: `XcavateWhitelist::AccountRoles` (`max_values`: None, `max_size`: Some(66), added: 2541, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::TokenListings` (r:1 w:0)
	/// Proof: `Marketplace::TokenListings` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::OngoingOffers` (r:1 w:1)
	/// Proof: `Marketplace::OngoingOffers` (`max_values`: None, `max_size`: Some(92), added: 2567, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Account` (r:3 w:3)
	/// Proof: `Assets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `AssetsHolder::Holds` (r:1 w:1)
	/// Proof: `AssetsHolder::Holds` (`max_values`: None, `max_size`: Some(103), added: 2578, mode: `MaxEncodedLen`)
	/// Storage: `AssetsHolder::BalancesOnHold` (r:1 w:1)
	/// Proof: `AssetsHolder::BalancesOnHold` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAsset::PropertyAssetInfo` (r:1 w:0)
	/// Proof: `RealEstateAsset::PropertyAssetInfo` (`max_values`: None, `max_size`: Some(63), added: 2538, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAsset::PropertyOwnerToken` (r:2 w:2)
	/// Proof: `RealEstateAsset::PropertyOwnerToken` (`max_values`: None, `max_size`: Some(72), added: 2547, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAssets::Asset` (r:1 w:1)
	/// Proof: `RealEstateAssets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAssets::Account` (r:2 w:2)
	/// Proof: `RealEstateAssets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `AssetsFreezer::FrozenBalances` (r:1 w:1)
	/// Proof: `AssetsFreezer::FrozenBalances` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:2 w:2)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `AssetsFreezer::Freezes` (r:1 w:1)
	/// Proof: `AssetsFreezer::Freezes` (`max_values`: None, `max_size`: Some(137), added: 2612, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAsset::PropertyOwner` (r:1 w:1)
	/// Proof: `RealEstateAsset::PropertyOwner` (`max_values`: None, `max_size`: Some(8022), added: 10497, mode: `MaxEncodedLen`)
	fn handle_offer() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `17521`
		//  Estimated: `11487`
		// Minimum execution time: 514_729_000 picoseconds.
		Weight::from_parts(546_110_000, 0)
			.saturating_add(Weight::from_parts(0, 11487))
			.saturating_add(T::DbWeight::get().reads(20))
			.saturating_add(T::DbWeight::get().writes(17))
	}
	/// Storage: `XcavateWhitelist::AccountRoles` (r:1 w:0)
	/// Proof: `XcavateWhitelist::AccountRoles` (`max_values`: None, `max_size`: Some(66), added: 2541, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::OngoingOffers` (r:1 w:1)
	/// Proof: `Marketplace::OngoingOffers` (`max_values`: None, `max_size`: Some(92), added: 2567, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Account` (r:1 w:1)
	/// Proof: `Assets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `AssetsHolder::Holds` (r:1 w:1)
	/// Proof: `AssetsHolder::Holds` (`max_values`: None, `max_size`: Some(103), added: 2578, mode: `MaxEncodedLen`)
	/// Storage: `AssetsHolder::BalancesOnHold` (r:1 w:1)
	/// Proof: `AssetsHolder::BalancesOnHold` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	fn cancel_offer() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `3003`
		//  Estimated: `3675`
		// Minimum execution time: 170_777_000 picoseconds.
		Weight::from_parts(182_643_000, 0)
			.saturating_add(Weight::from_parts(0, 3675))
			.saturating_add(T::DbWeight::get().reads(6))
			.saturating_add(T::DbWeight::get().writes(5))
	}
	/// Storage: `XcavateWhitelist::AccountRoles` (r:1 w:0)
	/// Proof: `XcavateWhitelist::AccountRoles` (`max_values`: None, `max_size`: Some(66), added: 2541, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::RefundToken` (r:1 w:1)
	/// Proof: `Marketplace::RefundToken` (`max_values`: None, `max_size`: Some(179), added: 2654, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::OngoingObjectListing` (r:1 w:1)
	/// Proof: `Marketplace::OngoingObjectListing` (`max_values`: None, `max_size`: Some(28732), added: 31207, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAsset::PropertyOwnerToken` (r:1 w:1)
	/// Proof: `RealEstateAsset::PropertyOwnerToken` (`max_values`: None, `max_size`: Some(72), added: 2547, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Account` (r:4 w:4)
	/// Proof: `Assets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `AssetsHolder::BalancesOnHold` (r:1 w:1)
	/// Proof: `AssetsHolder::BalancesOnHold` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAssets::Asset` (r:1 w:1)
	/// Proof: `RealEstateAssets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAssets::Account` (r:2 w:2)
	/// Proof: `RealEstateAssets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `AssetsFreezer::FrozenBalances` (r:2 w:2)
	/// Proof: `AssetsFreezer::FrozenBalances` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:6 w:6)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `AssetsFreezer::Freezes` (r:3 w:2)
	/// Proof: `AssetsFreezer::Freezes` (`max_values`: None, `max_size`: Some(137), added: 2612, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAsset::PropertyAssetInfo` (r:1 w:1)
	/// Proof: `RealEstateAsset::PropertyAssetInfo` (`max_values`: None, `max_size`: Some(63), added: 2538, mode: `MaxEncodedLen`)
	/// Storage: `NftFractionalization::NftToAsset` (r:1 w:1)
	/// Proof: `NftFractionalization::NftToAsset` (`max_values`: None, `max_size`: Some(92), added: 2567, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::Attribute` (r:1 w:1)
	/// Proof: `Nfts::Attribute` (`max_values`: None, `max_size`: Some(446), added: 2921, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::Collection` (r:1 w:1)
	/// Proof: `Nfts::Collection` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::CollectionConfigOf` (r:1 w:0)
	/// Proof: `Nfts::CollectionConfigOf` (`max_values`: None, `max_size`: Some(73), added: 2548, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::ItemConfigOf` (r:1 w:1)
	/// Proof: `Nfts::ItemConfigOf` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::Item` (r:1 w:1)
	/// Proof: `Nfts::Item` (`max_values`: None, `max_size`: Some(861), added: 3336, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Holds` (r:2 w:2)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(247), added: 2722, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::ItemMetadataOf` (r:1 w:1)
	/// Proof: `Nfts::ItemMetadataOf` (`max_values`: None, `max_size`: Some(140), added: 2615, mode: `MaxEncodedLen`)
	/// Storage: `AssetsHolder::Holds` (r:1 w:1)
	/// Proof: `AssetsHolder::Holds` (`max_values`: None, `max_size`: Some(103), added: 2578, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::ListingDeposits` (r:1 w:1)
	/// Proof: `Marketplace::ListingDeposits` (`max_values`: None, `max_size`: Some(68), added: 2543, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAsset::PropertyOwner` (r:0 w:1)
	/// Proof: `RealEstateAsset::PropertyOwner` (`max_values`: None, `max_size`: Some(8022), added: 10497, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::Account` (r:0 w:1)
	/// Proof: `Nfts::Account` (`max_values`: None, `max_size`: Some(88), added: 2563, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::ItemPriceOf` (r:0 w:1)
	/// Proof: `Nfts::ItemPriceOf` (`max_values`: None, `max_size`: Some(89), added: 2564, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::ItemAttributesApprovalsOf` (r:0 w:1)
	/// Proof: `Nfts::ItemAttributesApprovalsOf` (`max_values`: None, `max_size`: Some(681), added: 3156, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::PendingSwapOf` (r:0 w:1)
	/// Proof: `Nfts::PendingSwapOf` (`max_values`: None, `max_size`: Some(71), added: 2546, mode: `MaxEncodedLen`)
	fn withdraw_rejected() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `4885`
		//  Estimated: `32197`
		// Minimum execution time: 931_645_000 picoseconds.
		Weight::from_parts(948_161_000, 0)
			.saturating_add(Weight::from_parts(0, 32197))
			.saturating_add(T::DbWeight::get().reads(36))
			.saturating_add(T::DbWeight::get().writes(38))
	}
	/// Storage: `XcavateWhitelist::AccountRoles` (r:1 w:0)
	/// Proof: `XcavateWhitelist::AccountRoles` (`max_values`: None, `max_size`: Some(66), added: 2541, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::OngoingObjectListing` (r:1 w:1)
	/// Proof: `Marketplace::OngoingObjectListing` (`max_values`: None, `max_size`: Some(28732), added: 31207, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAsset::PropertyOwnerToken` (r:1 w:1)
	/// Proof: `RealEstateAsset::PropertyOwnerToken` (`max_values`: None, `max_size`: Some(72), added: 2547, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::RefundLegalExpired` (r:1 w:1)
	/// Proof: `Marketplace::RefundLegalExpired` (`max_values`: None, `max_size`: Some(24), added: 2499, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Account` (r:2 w:2)
	/// Proof: `Assets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `AssetsHolder::BalancesOnHold` (r:1 w:1)
	/// Proof: `AssetsHolder::BalancesOnHold` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:4 w:4)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `AssetsHolder::Holds` (r:1 w:1)
	/// Proof: `AssetsHolder::Holds` (`max_values`: None, `max_size`: Some(103), added: 2578, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAssets::Asset` (r:1 w:1)
	/// Proof: `RealEstateAssets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAssets::Account` (r:2 w:2)
	/// Proof: `RealEstateAssets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `AssetsFreezer::FrozenBalances` (r:2 w:2)
	/// Proof: `AssetsFreezer::FrozenBalances` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `AssetsFreezer::Freezes` (r:3 w:2)
	/// Proof: `AssetsFreezer::Freezes` (`max_values`: None, `max_size`: Some(137), added: 2612, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAsset::PropertyAssetInfo` (r:1 w:1)
	/// Proof: `RealEstateAsset::PropertyAssetInfo` (`max_values`: None, `max_size`: Some(63), added: 2538, mode: `MaxEncodedLen`)
	/// Storage: `NftFractionalization::NftToAsset` (r:1 w:1)
	/// Proof: `NftFractionalization::NftToAsset` (`max_values`: None, `max_size`: Some(92), added: 2567, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::Attribute` (r:1 w:1)
	/// Proof: `Nfts::Attribute` (`max_values`: None, `max_size`: Some(446), added: 2921, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::Collection` (r:1 w:1)
	/// Proof: `Nfts::Collection` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::CollectionConfigOf` (r:1 w:0)
	/// Proof: `Nfts::CollectionConfigOf` (`max_values`: None, `max_size`: Some(73), added: 2548, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::ItemConfigOf` (r:1 w:1)
	/// Proof: `Nfts::ItemConfigOf` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::Item` (r:1 w:1)
	/// Proof: `Nfts::Item` (`max_values`: None, `max_size`: Some(861), added: 3336, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Holds` (r:2 w:2)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(247), added: 2722, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::ItemMetadataOf` (r:1 w:1)
	/// Proof: `Nfts::ItemMetadataOf` (`max_values`: None, `max_size`: Some(140), added: 2615, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::ListingDeposits` (r:1 w:1)
	/// Proof: `Marketplace::ListingDeposits` (`max_values`: None, `max_size`: Some(68), added: 2543, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAsset::PropertyOwner` (r:0 w:1)
	/// Proof: `RealEstateAsset::PropertyOwner` (`max_values`: None, `max_size`: Some(8022), added: 10497, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::Account` (r:0 w:1)
	/// Proof: `Nfts::Account` (`max_values`: None, `max_size`: Some(88), added: 2563, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::ItemPriceOf` (r:0 w:1)
	/// Proof: `Nfts::ItemPriceOf` (`max_values`: None, `max_size`: Some(89), added: 2564, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::ItemAttributesApprovalsOf` (r:0 w:1)
	/// Proof: `Nfts::ItemAttributesApprovalsOf` (`max_values`: None, `max_size`: Some(681), added: 3156, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::PendingSwapOf` (r:0 w:1)
	/// Proof: `Nfts::PendingSwapOf` (`max_values`: None, `max_size`: Some(71), added: 2546, mode: `MaxEncodedLen`)
	fn withdraw_legal_process_expired() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `4521`
		//  Estimated: `32197`
		// Minimum execution time: 789_686_000 picoseconds.
		Weight::from_parts(813_192_000, 0)
			.saturating_add(Weight::from_parts(0, 32197))
			.saturating_add(T::DbWeight::get().reads(32))
			.saturating_add(T::DbWeight::get().writes(34))
	}
	/// Storage: `XcavateWhitelist::AccountRoles` (r:1 w:0)
	/// Proof: `XcavateWhitelist::AccountRoles` (`max_values`: None, `max_size`: Some(66), added: 2541, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::OngoingObjectListing` (r:1 w:1)
	/// Proof: `Marketplace::OngoingObjectListing` (`max_values`: None, `max_size`: Some(28732), added: 31207, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::TokenOwner` (r:1 w:1)
	/// Proof: `Marketplace::TokenOwner` (`max_values`: None, `max_size`: Some(155), added: 2630, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Account` (r:1 w:1)
	/// Proof: `Assets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `AssetsHolder::Holds` (r:1 w:1)
	/// Proof: `AssetsHolder::Holds` (`max_values`: None, `max_size`: Some(103), added: 2578, mode: `MaxEncodedLen`)
	/// Storage: `AssetsHolder::BalancesOnHold` (r:1 w:1)
	/// Proof: `AssetsHolder::BalancesOnHold` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAsset::PropertyAssetInfo` (r:1 w:1)
	/// Proof: `RealEstateAsset::PropertyAssetInfo` (`max_values`: None, `max_size`: Some(63), added: 2538, mode: `MaxEncodedLen`)
	/// Storage: `NftFractionalization::NftToAsset` (r:1 w:1)
	/// Proof: `NftFractionalization::NftToAsset` (`max_values`: None, `max_size`: Some(92), added: 2567, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAssets::Asset` (r:1 w:1)
	/// Proof: `RealEstateAssets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAssets::Account` (r:1 w:1)
	/// Proof: `RealEstateAssets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `AssetsFreezer::FrozenBalances` (r:1 w:1)
	/// Proof: `AssetsFreezer::FrozenBalances` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:3 w:3)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `AssetsFreezer::Freezes` (r:2 w:1)
	/// Proof: `AssetsFreezer::Freezes` (`max_values`: None, `max_size`: Some(137), added: 2612, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::Attribute` (r:1 w:1)
	/// Proof: `Nfts::Attribute` (`max_values`: None, `max_size`: Some(446), added: 2921, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::Collection` (r:1 w:1)
	/// Proof: `Nfts::Collection` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::CollectionConfigOf` (r:1 w:0)
	/// Proof: `Nfts::CollectionConfigOf` (`max_values`: None, `max_size`: Some(73), added: 2548, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::ItemConfigOf` (r:1 w:1)
	/// Proof: `Nfts::ItemConfigOf` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::Item` (r:1 w:1)
	/// Proof: `Nfts::Item` (`max_values`: None, `max_size`: Some(861), added: 3336, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Holds` (r:2 w:2)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(247), added: 2722, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::ItemMetadataOf` (r:1 w:1)
	/// Proof: `Nfts::ItemMetadataOf` (`max_values`: None, `max_size`: Some(140), added: 2615, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::ListingDeposits` (r:1 w:1)
	/// Proof: `Marketplace::ListingDeposits` (`max_values`: None, `max_size`: Some(68), added: 2543, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::Account` (r:0 w:1)
	/// Proof: `Nfts::Account` (`max_values`: None, `max_size`: Some(88), added: 2563, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::ItemPriceOf` (r:0 w:1)
	/// Proof: `Nfts::ItemPriceOf` (`max_values`: None, `max_size`: Some(89), added: 2564, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::ItemAttributesApprovalsOf` (r:0 w:1)
	/// Proof: `Nfts::ItemAttributesApprovalsOf` (`max_values`: None, `max_size`: Some(681), added: 3156, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::PendingSwapOf` (r:0 w:1)
	/// Proof: `Nfts::PendingSwapOf` (`max_values`: None, `max_size`: Some(71), added: 2546, mode: `MaxEncodedLen`)
	fn withdraw_expired() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `3962`
		//  Estimated: `32197`
		// Minimum execution time: 616_577_000 picoseconds.
		Weight::from_parts(649_271_000, 0)
			.saturating_add(Weight::from_parts(0, 32197))
			.saturating_add(T::DbWeight::get().reads(26))
			.saturating_add(T::DbWeight::get().writes(27))
	}
	/// Storage: `XcavateWhitelist::AccountRoles` (r:1 w:0)
	/// Proof: `XcavateWhitelist::AccountRoles` (`max_values`: None, `max_size`: Some(66), added: 2541, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::OngoingObjectListing` (r:1 w:1)
	/// Proof: `Marketplace::OngoingObjectListing` (`max_values`: None, `max_size`: Some(28732), added: 31207, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAsset::PropertyAssetInfo` (r:1 w:1)
	/// Proof: `RealEstateAsset::PropertyAssetInfo` (`max_values`: None, `max_size`: Some(63), added: 2538, mode: `MaxEncodedLen`)
	/// Storage: `NftFractionalization::NftToAsset` (r:1 w:1)
	/// Proof: `NftFractionalization::NftToAsset` (`max_values`: None, `max_size`: Some(92), added: 2567, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAssets::Asset` (r:1 w:1)
	/// Proof: `RealEstateAssets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAssets::Account` (r:1 w:1)
	/// Proof: `RealEstateAssets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `AssetsFreezer::FrozenBalances` (r:1 w:1)
	/// Proof: `AssetsFreezer::FrozenBalances` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:3 w:3)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `AssetsFreezer::Freezes` (r:2 w:1)
	/// Proof: `AssetsFreezer::Freezes` (`max_values`: None, `max_size`: Some(137), added: 2612, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::Attribute` (r:1 w:1)
	/// Proof: `Nfts::Attribute` (`max_values`: None, `max_size`: Some(446), added: 2921, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::Collection` (r:1 w:1)
	/// Proof: `Nfts::Collection` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::CollectionConfigOf` (r:1 w:0)
	/// Proof: `Nfts::CollectionConfigOf` (`max_values`: None, `max_size`: Some(73), added: 2548, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::ItemConfigOf` (r:1 w:1)
	/// Proof: `Nfts::ItemConfigOf` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::Item` (r:1 w:1)
	/// Proof: `Nfts::Item` (`max_values`: None, `max_size`: Some(861), added: 3336, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Holds` (r:2 w:2)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(247), added: 2722, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::ItemMetadataOf` (r:1 w:1)
	/// Proof: `Nfts::ItemMetadataOf` (`max_values`: None, `max_size`: Some(140), added: 2615, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::ListingDeposits` (r:1 w:1)
	/// Proof: `Marketplace::ListingDeposits` (`max_values`: None, `max_size`: Some(68), added: 2543, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::Account` (r:0 w:1)
	/// Proof: `Nfts::Account` (`max_values`: None, `max_size`: Some(88), added: 2563, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::ItemPriceOf` (r:0 w:1)
	/// Proof: `Nfts::ItemPriceOf` (`max_values`: None, `max_size`: Some(89), added: 2564, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::ItemAttributesApprovalsOf` (r:0 w:1)
	/// Proof: `Nfts::ItemAttributesApprovalsOf` (`max_values`: None, `max_size`: Some(681), added: 3156, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::PendingSwapOf` (r:0 w:1)
	/// Proof: `Nfts::PendingSwapOf` (`max_values`: None, `max_size`: Some(71), added: 2546, mode: `MaxEncodedLen`)
	fn withdraw_deposit_unsold() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2692`
		//  Estimated: `32197`
		// Minimum execution time: 547_155_000 picoseconds.
		Weight::from_parts(559_617_000, 0)
			.saturating_add(Weight::from_parts(0, 32197))
			.saturating_add(T::DbWeight::get().reads(21))
			.saturating_add(T::DbWeight::get().writes(22))
	}
	/// Storage: `XcavateWhitelist::AccountRoles` (r:1 w:0)
	/// Proof: `XcavateWhitelist::AccountRoles` (`max_values`: None, `max_size`: Some(66), added: 2541, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::RefundClaimedToken` (r:1 w:1)
	/// Proof: `Marketplace::RefundClaimedToken` (`max_values`: None, `max_size`: Some(24), added: 2499, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::OngoingObjectListing` (r:1 w:1)
	/// Proof: `Marketplace::OngoingObjectListing` (`max_values`: None, `max_size`: Some(28732), added: 31207, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAsset::PropertyOwnerToken` (r:1 w:1)
	/// Proof: `RealEstateAsset::PropertyOwnerToken` (`max_values`: None, `max_size`: Some(72), added: 2547, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Account` (r:2 w:2)
	/// Proof: `Assets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `AssetsHolder::BalancesOnHold` (r:1 w:1)
	/// Proof: `AssetsHolder::BalancesOnHold` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:4 w:4)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `AssetsHolder::Holds` (r:1 w:1)
	/// Proof: `AssetsHolder::Holds` (`max_values`: None, `max_size`: Some(103), added: 2578, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAssets::Asset` (r:1 w:1)
	/// Proof: `RealEstateAssets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAssets::Account` (r:2 w:2)
	/// Proof: `RealEstateAssets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `AssetsFreezer::FrozenBalances` (r:2 w:2)
	/// Proof: `AssetsFreezer::FrozenBalances` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `AssetsFreezer::Freezes` (r:3 w:2)
	/// Proof: `AssetsFreezer::Freezes` (`max_values`: None, `max_size`: Some(137), added: 2612, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAsset::PropertyAssetInfo` (r:1 w:1)
	/// Proof: `RealEstateAsset::PropertyAssetInfo` (`max_values`: None, `max_size`: Some(63), added: 2538, mode: `MaxEncodedLen`)
	/// Storage: `NftFractionalization::NftToAsset` (r:1 w:1)
	/// Proof: `NftFractionalization::NftToAsset` (`max_values`: None, `max_size`: Some(92), added: 2567, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::Attribute` (r:1 w:1)
	/// Proof: `Nfts::Attribute` (`max_values`: None, `max_size`: Some(446), added: 2921, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::Collection` (r:1 w:1)
	/// Proof: `Nfts::Collection` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::CollectionConfigOf` (r:1 w:0)
	/// Proof: `Nfts::CollectionConfigOf` (`max_values`: None, `max_size`: Some(73), added: 2548, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::ItemConfigOf` (r:1 w:1)
	/// Proof: `Nfts::ItemConfigOf` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::Item` (r:1 w:1)
	/// Proof: `Nfts::Item` (`max_values`: None, `max_size`: Some(861), added: 3336, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Holds` (r:2 w:2)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(247), added: 2722, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::ItemMetadataOf` (r:1 w:1)
	/// Proof: `Nfts::ItemMetadataOf` (`max_values`: None, `max_size`: Some(140), added: 2615, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::ListingDeposits` (r:1 w:1)
	/// Proof: `Marketplace::ListingDeposits` (`max_values`: None, `max_size`: Some(68), added: 2543, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAsset::PropertyOwner` (r:0 w:1)
	/// Proof: `RealEstateAsset::PropertyOwner` (`max_values`: None, `max_size`: Some(8022), added: 10497, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::Account` (r:0 w:1)
	/// Proof: `Nfts::Account` (`max_values`: None, `max_size`: Some(88), added: 2563, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::ItemPriceOf` (r:0 w:1)
	/// Proof: `Nfts::ItemPriceOf` (`max_values`: None, `max_size`: Some(89), added: 2564, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::ItemAttributesApprovalsOf` (r:0 w:1)
	/// Proof: `Nfts::ItemAttributesApprovalsOf` (`max_values`: None, `max_size`: Some(681), added: 3156, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::PendingSwapOf` (r:0 w:1)
	/// Proof: `Nfts::PendingSwapOf` (`max_values`: None, `max_size`: Some(71), added: 2546, mode: `MaxEncodedLen`)
	fn withdraw_claiming_expired() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `4467`
		//  Estimated: `32197`
		// Minimum execution time: 783_154_000 picoseconds.
		Weight::from_parts(803_714_000, 0)
			.saturating_add(Weight::from_parts(0, 32197))
			.saturating_add(T::DbWeight::get().reads(32))
			.saturating_add(T::DbWeight::get().writes(34))
	}
	/// Storage: `XcavateWhitelist::AccountRoles` (r:1 w:0)
	/// Proof: `XcavateWhitelist::AccountRoles` (`max_values`: None, `max_size`: Some(66), added: 2541, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::TokenOwner` (r:1 w:1)
	/// Proof: `Marketplace::TokenOwner` (`max_values`: None, `max_size`: Some(155), added: 2630, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::OngoingObjectListing` (r:1 w:0)
	/// Proof: `Marketplace::OngoingObjectListing` (`max_values`: None, `max_size`: Some(28732), added: 31207, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Account` (r:1 w:1)
	/// Proof: `Assets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `AssetsHolder::Holds` (r:1 w:1)
	/// Proof: `AssetsHolder::Holds` (`max_values`: None, `max_size`: Some(103), added: 2578, mode: `MaxEncodedLen`)
	/// Storage: `AssetsHolder::BalancesOnHold` (r:1 w:1)
	/// Proof: `AssetsHolder::BalancesOnHold` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	fn withdraw_unclaimed() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2132`
		//  Estimated: `32197`
		// Minimum execution time: 130_603_000 picoseconds.
		Weight::from_parts(134_302_000, 0)
			.saturating_add(Weight::from_parts(0, 32197))
			.saturating_add(T::DbWeight::get().reads(7))
			.saturating_add(T::DbWeight::get().writes(5))
	}
	/// Storage: `XcavateWhitelist::AccountRoles` (r:1 w:0)
	/// Proof: `XcavateWhitelist::AccountRoles` (`max_values`: None, `max_size`: Some(66), added: 2541, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::PropertyLawyer` (r:1 w:0)
	/// Proof: `Marketplace::PropertyLawyer` (`max_values`: None, `max_size`: Some(175), added: 2650, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::OngoingObjectListing` (r:1 w:1)
	/// Proof: `Marketplace::OngoingObjectListing` (`max_values`: None, `max_size`: Some(28732), added: 31207, mode: `MaxEncodedLen`)
	fn upgrade_object() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `610`
		//  Estimated: `32197`
		// Minimum execution time: 47_986_000 picoseconds.
		Weight::from_parts(50_337_000, 0)
			.saturating_add(Weight::from_parts(0, 32197))
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `XcavateWhitelist::AccountRoles` (r:1 w:0)
	/// Proof: `XcavateWhitelist::AccountRoles` (`max_values`: None, `max_size`: Some(66), added: 2541, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::TokenListings` (r:1 w:1)
	/// Proof: `Marketplace::TokenListings` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAssets::Asset` (r:1 w:1)
	/// Proof: `RealEstateAssets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAssets::Account` (r:2 w:2)
	/// Proof: `RealEstateAssets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `AssetsFreezer::FrozenBalances` (r:1 w:1)
	/// Proof: `AssetsFreezer::FrozenBalances` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:2 w:2)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `AssetsFreezer::Freezes` (r:1 w:1)
	/// Proof: `AssetsFreezer::Freezes` (`max_values`: None, `max_size`: Some(137), added: 2612, mode: `MaxEncodedLen`)
	fn delist_token() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `5300`
		//  Estimated: `6208`
		// Minimum execution time: 256_918_000 picoseconds.
		Weight::from_parts(269_962_000, 0)
			.saturating_add(Weight::from_parts(0, 6208))
			.saturating_add(T::DbWeight::get().reads(9))
			.saturating_add(T::DbWeight::get().writes(8))
	}
	/// Storage: `XcavateWhitelist::AccountRoles` (r:1 w:0)
	/// Proof: `XcavateWhitelist::AccountRoles` (`max_values`: None, `max_size`: Some(66), added: 2541, mode: `MaxEncodedLen`)
	/// Storage: `Regions::RealEstateLawyer` (r:1 w:0)
	/// Proof: `Regions::RealEstateLawyer` (`max_values`: None, `max_size`: Some(70), added: 2545, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::PropertyLawyer` (r:1 w:0)
	/// Proof: `Marketplace::PropertyLawyer` (`max_values`: None, `max_size`: Some(175), added: 2650, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::OngoingObjectListing` (r:1 w:0)
	/// Proof: `Marketplace::OngoingObjectListing` (`max_values`: None, `max_size`: Some(28732), added: 31207, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAsset::PropertyAssetInfo` (r:1 w:0)
	/// Proof: `RealEstateAsset::PropertyAssetInfo` (`max_values`: None, `max_size`: Some(63), added: 2538, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::ListingSpvProposal` (r:1 w:1)
	/// Proof: `Marketplace::ListingSpvProposal` (`max_values`: None, `max_size`: Some(28), added: 2503, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::ProposedLawyers` (r:1 w:0)
	/// Proof: `Marketplace::ProposedLawyers` (`max_values`: None, `max_size`: Some(68), added: 2543, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::ProposalCounter` (r:1 w:1)
	/// Proof: `Marketplace::ProposalCounter` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::OngoingLawyerVoting` (r:0 w:1)
	/// Proof: `Marketplace::OngoingLawyerVoting` (`max_values`: None, `max_size`: Some(32), added: 2507, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::SpvLawyerProposal` (r:0 w:1)
	/// Proof: `Marketplace::SpvLawyerProposal` (`max_values`: None, `max_size`: Some(80), added: 2555, mode: `MaxEncodedLen`)
	fn lawyer_claim_property() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `20429`
		//  Estimated: `32197`
		// Minimum execution time: 467_327_000 picoseconds.
		Weight::from_parts(505_598_000, 0)
			.saturating_add(Weight::from_parts(0, 32197))
			.saturating_add(T::DbWeight::get().reads(8))
			.saturating_add(T::DbWeight::get().writes(4))
	}
	/// Storage: `XcavateWhitelist::AccountRoles` (r:1 w:0)
	/// Proof: `XcavateWhitelist::AccountRoles` (`max_values`: None, `max_size`: Some(66), added: 2541, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::ListingSpvProposal` (r:1 w:0)
	/// Proof: `Marketplace::ListingSpvProposal` (`max_values`: None, `max_size`: Some(28), added: 2503, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::SpvLawyerProposal` (r:1 w:0)
	/// Proof: `Marketplace::SpvLawyerProposal` (`max_values`: None, `max_size`: Some(80), added: 2555, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAsset::PropertyOwnerToken` (r:1 w:0)
	/// Proof: `RealEstateAsset::PropertyOwnerToken` (`max_values`: None, `max_size`: Some(72), added: 2547, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::OngoingLawyerVoting` (r:1 w:1)
	/// Proof: `Marketplace::OngoingLawyerVoting` (`max_values`: None, `max_size`: Some(32), added: 2507, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::UserLawyerVote` (r:1 w:1)
	/// Proof: `Marketplace::UserLawyerVote` (`max_values`: None, `max_size`: Some(81), added: 2556, mode: `MaxEncodedLen`)
	/// Storage: `AssetsFreezer::Freezes` (r:1 w:1)
	/// Proof: `AssetsFreezer::Freezes` (`max_values`: None, `max_size`: Some(137), added: 2612, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAssets::Account` (r:1 w:0)
	/// Proof: `RealEstateAssets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `AssetsFreezer::FrozenBalances` (r:1 w:1)
	/// Proof: `AssetsFreezer::FrozenBalances` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	fn vote_on_spv_lawyer() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `6615`
		//  Estimated: `3602`
		// Minimum execution time: 229_416_000 picoseconds.
		Weight::from_parts(249_051_000, 0)
			.saturating_add(Weight::from_parts(0, 3602))
			.saturating_add(T::DbWeight::get().reads(9))
			.saturating_add(T::DbWeight::get().writes(4))
	}
	/// Storage: `XcavateWhitelist::AccountRoles` (r:1 w:0)
	/// Proof: `XcavateWhitelist::AccountRoles` (`max_values`: None, `max_size`: Some(66), added: 2541, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::OngoingObjectListing` (r:1 w:0)
	/// Proof: `Marketplace::OngoingObjectListing` (`max_values`: None, `max_size`: Some(28732), added: 31207, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::PropertyLawyer` (r:1 w:1)
	/// Proof: `Marketplace::PropertyLawyer` (`max_values`: None, `max_size`: Some(175), added: 2650, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::ProposedLawyers` (r:1 w:1)
	/// Proof: `Marketplace::ProposedLawyers` (`max_values`: None, `max_size`: Some(68), added: 2543, mode: `MaxEncodedLen`)
	/// Storage: `Regions::RealEstateLawyer` (r:1 w:1)
	/// Proof: `Regions::RealEstateLawyer` (`max_values`: None, `max_size`: Some(70), added: 2545, mode: `MaxEncodedLen`)
	fn approve_developer_lawyer() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `20519`
		//  Estimated: `32197`
		// Minimum execution time: 450_602_000 picoseconds.
		Weight::from_parts(490_879_000, 0)
			.saturating_add(Weight::from_parts(0, 32197))
			.saturating_add(T::DbWeight::get().reads(5))
			.saturating_add(T::DbWeight::get().writes(3))
	}
	/// Storage: `XcavateWhitelist::AccountRoles` (r:1 w:0)
	/// Proof: `XcavateWhitelist::AccountRoles` (`max_values`: None, `max_size`: Some(66), added: 2541, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::ListingSpvProposal` (r:1 w:1)
	/// Proof: `Marketplace::ListingSpvProposal` (`max_values`: None, `max_size`: Some(28), added: 2503, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::SpvLawyerProposal` (r:1 w:1)
	/// Proof: `Marketplace::SpvLawyerProposal` (`max_values`: None, `max_size`: Some(80), added: 2555, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::OngoingLawyerVoting` (r:1 w:1)
	/// Proof: `Marketplace::OngoingLawyerVoting` (`max_values`: None, `max_size`: Some(32), added: 2507, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::OngoingObjectListing` (r:1 w:0)
	/// Proof: `Marketplace::OngoingObjectListing` (`max_values`: None, `max_size`: Some(28732), added: 31207, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::PropertyLawyer` (r:1 w:1)
	/// Proof: `Marketplace::PropertyLawyer` (`max_values`: None, `max_size`: Some(175), added: 2650, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAsset::PropertyAssetInfo` (r:1 w:0)
	/// Proof: `RealEstateAsset::PropertyAssetInfo` (`max_values`: None, `max_size`: Some(63), added: 2538, mode: `MaxEncodedLen`)
	/// Storage: `Regions::RealEstateLawyer` (r:1 w:1)
	/// Proof: `Regions::RealEstateLawyer` (`max_values`: None, `max_size`: Some(70), added: 2545, mode: `MaxEncodedLen`)
	fn finalize_spv_lawyer() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `20868`
		//  Estimated: `32197`
		// Minimum execution time: 485_950_000 picoseconds.
		Weight::from_parts(507_364_000, 0)
			.saturating_add(Weight::from_parts(0, 32197))
			.saturating_add(T::DbWeight::get().reads(8))
			.saturating_add(T::DbWeight::get().writes(5))
	}
	/// Storage: `Marketplace::UserLawyerVote` (r:1 w:1)
	/// Proof: `Marketplace::UserLawyerVote` (`max_values`: None, `max_size`: Some(81), added: 2556, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::SpvLawyerProposal` (r:1 w:0)
	/// Proof: `Marketplace::SpvLawyerProposal` (`max_values`: None, `max_size`: Some(80), added: 2555, mode: `MaxEncodedLen`)
	/// Storage: `AssetsFreezer::Freezes` (r:1 w:1)
	/// Proof: `AssetsFreezer::Freezes` (`max_values`: None, `max_size`: Some(137), added: 2612, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAssets::Account` (r:1 w:0)
	/// Proof: `RealEstateAssets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `AssetsFreezer::FrozenBalances` (r:1 w:1)
	/// Proof: `AssetsFreezer::FrozenBalances` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	fn unfreeze_spv_lawyer_token() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `4250`
		//  Estimated: `3602`
		// Minimum execution time: 135_355_000 picoseconds.
		Weight::from_parts(158_002_000, 0)
			.saturating_add(Weight::from_parts(0, 3602))
			.saturating_add(T::DbWeight::get().reads(5))
			.saturating_add(T::DbWeight::get().writes(3))
	}
	/// Storage: `XcavateWhitelist::AccountRoles` (r:1 w:0)
	/// Proof: `XcavateWhitelist::AccountRoles` (`max_values`: None, `max_size`: Some(66), added: 2541, mode: `MaxEncodedLen`)
	/// Storage: `Regions::RealEstateLawyer` (r:1 w:1)
	/// Proof: `Regions::RealEstateLawyer` (`max_values`: None, `max_size`: Some(70), added: 2545, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::PropertyLawyer` (r:1 w:1)
	/// Proof: `Marketplace::PropertyLawyer` (`max_values`: None, `max_size`: Some(175), added: 2650, mode: `MaxEncodedLen`)
	fn remove_lawyer_claim() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1856`
		//  Estimated: `3640`
		// Minimum execution time: 113_239_000 picoseconds.
		Weight::from_parts(127_852_000, 0)
			.saturating_add(Weight::from_parts(0, 3640))
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: `XcavateWhitelist::AccountRoles` (r:1 w:0)
	/// Proof: `XcavateWhitelist::AccountRoles` (`max_values`: None, `max_size`: Some(66), added: 2541, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::PropertyLawyer` (r:1 w:1)
	/// Proof: `Marketplace::PropertyLawyer` (`max_values`: None, `max_size`: Some(175), added: 2650, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::OngoingObjectListing` (r:1 w:1)
	/// Proof: `Marketplace::OngoingObjectListing` (`max_values`: None, `max_size`: Some(28732), added: 31207, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAsset::PropertyAssetInfo` (r:1 w:1)
	/// Proof: `RealEstateAsset::PropertyAssetInfo` (`max_values`: None, `max_size`: Some(63), added: 2538, mode: `MaxEncodedLen`)
	/// Storage: `Regions::RegionDetails` (r:1 w:0)
	/// Proof: `Regions::RegionDetails` (`max_values`: None, `max_size`: Some(87), added: 2562, mode: `MaxEncodedLen`)
	/// Storage: `Regions::RealEstateLawyer` (r:2 w:2)
	/// Proof: `Regions::RealEstateLawyer` (`max_values`: None, `max_size`: Some(70), added: 2545, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Account` (r:5 w:5)
	/// Proof: `Assets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `AssetsHolder::BalancesOnHold` (r:1 w:1)
	/// Proof: `AssetsHolder::BalancesOnHold` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:5 w:5)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `AssetsHolder::Holds` (r:1 w:1)
	/// Proof: `AssetsHolder::Holds` (`max_values`: None, `max_size`: Some(103), added: 2578, mode: `MaxEncodedLen`)
	/// Storage: `Marketplace::ListingDeposits` (r:1 w:1)
	/// Proof: `Marketplace::ListingDeposits` (`max_values`: None, `max_size`: Some(68), added: 2543, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Holds` (r:1 w:1)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(247), added: 2722, mode: `MaxEncodedLen`)
	/// The range of component `a` is `[1, 250]`.
	fn lawyer_confirm_documents(a: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `4376 + a * (86 Â±0)`
		//  Estimated: `32197`
		// Minimum execution time: 511_963_000 picoseconds.
		Weight::from_parts(569_151_857, 0)
			.saturating_add(Weight::from_parts(0, 32197))
			// Standard Error: 15_729
			.saturating_add(Weight::from_parts(1_778_305, 0).saturating_mul(a.into()))
			.saturating_add(T::DbWeight::get().reads(22))
			.saturating_add(T::DbWeight::get().writes(20))
	}
	/// Storage: `XcavateWhitelist::AccountRoles` (r:2 w:0)
	/// Proof: `XcavateWhitelist::AccountRoles` (`max_values`: None, `max_size`: Some(66), added: 2541, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAsset::PropertyAssetInfo` (r:1 w:0)
	/// Proof: `RealEstateAsset::PropertyAssetInfo` (`max_values`: None, `max_size`: Some(63), added: 2538, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAsset::PropertyOwnerToken` (r:2 w:2)
	/// Proof: `RealEstateAsset::PropertyOwnerToken` (`max_values`: None, `max_size`: Some(72), added: 2547, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAssets::Asset` (r:1 w:1)
	/// Proof: `RealEstateAssets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAssets::Account` (r:2 w:2)
	/// Proof: `RealEstateAssets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `AssetsFreezer::FrozenBalances` (r:1 w:1)
	/// Proof: `AssetsFreezer::FrozenBalances` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:2 w:2)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `AssetsFreezer::Freezes` (r:1 w:1)
	/// Proof: `AssetsFreezer::Freezes` (`max_values`: None, `max_size`: Some(137), added: 2612, mode: `MaxEncodedLen`)
	/// Storage: `RealEstateAsset::PropertyOwner` (r:1 w:1)
	/// Proof: `RealEstateAsset::PropertyOwner` (`max_values`: None, `max_size`: Some(8022), added: 10497, mode: `MaxEncodedLen`)
	fn send_property_token() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `15175`
		//  Estimated: `11487`
		// Minimum execution time: 337_500_000 picoseconds.
		Weight::from_parts(354_350_000, 0)
			.saturating_add(Weight::from_parts(0, 11487))
			.saturating_add(T::DbWeight::get().reads(13))
			.saturating_add(T::DbWeight::get().writes(10))
	}
}

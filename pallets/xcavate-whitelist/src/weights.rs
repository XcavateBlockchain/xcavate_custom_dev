
//! Autogenerated weights for `pallet_xcavate_whitelist`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 47.2.0
//! DATE: 2025-08-21, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `recrafter-Legion-5-16IRX9`, CPU: `Intel(R) Core(TM) i7-14650HX`
//! WASM-EXECUTION: `Compiled`, CHAIN: `None`, DB CACHE: 1024

// Executed Command:
// ./target/release/parachain-template-node
// benchmark
// pallet
// --pallet
// pallet_xcavate_whitelist
// --extrinsic
// *
// --steps
// 50
// --repeat
// 20
// --output
// ./pallets/xcavate-whitelist/src/weights.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::Weight};
use core::marker::PhantomData;

pub trait WeightInfo {
	fn add_admin() -> Weight;
	fn remove_admin() -> Weight;
	fn assign_role() -> Weight;
	fn remove_role() -> Weight;
	fn set_permission() -> Weight;
}

/// Weight functions for `pallet_xcavate_whitelist`.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	/// Storage: `XcavateWhitelist::AdminAccounts` (r:1 w:1)
	/// Proof: `XcavateWhitelist::AdminAccounts` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	fn add_admin() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `43`
		//  Estimated: `3513`
		// Minimum execution time: 9_046_000 picoseconds.
		Weight::from_parts(9_406_000, 0)
			.saturating_add(Weight::from_parts(0, 3513))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `XcavateWhitelist::AdminAccounts` (r:1 w:1)
	/// Proof: `XcavateWhitelist::AdminAccounts` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	fn remove_admin() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `117`
		//  Estimated: `3513`
		// Minimum execution time: 10_790_000 picoseconds.
		Weight::from_parts(11_158_000, 0)
			.saturating_add(Weight::from_parts(0, 3513))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `XcavateWhitelist::AdminAccounts` (r:1 w:0)
	/// Proof: `XcavateWhitelist::AdminAccounts` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	/// Storage: `XcavateWhitelist::AccountRoles` (r:1 w:1)
	/// Proof: `XcavateWhitelist::AccountRoles` (`max_values`: None, `max_size`: Some(66), added: 2541, mode: `MaxEncodedLen`)
	fn assign_role() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `117`
		//  Estimated: `3531`
		// Minimum execution time: 14_023_000 picoseconds.
		Weight::from_parts(14_525_000, 0)
			.saturating_add(Weight::from_parts(0, 3531))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `XcavateWhitelist::AdminAccounts` (r:1 w:0)
	/// Proof: `XcavateWhitelist::AdminAccounts` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	/// Storage: `XcavateWhitelist::AccountRoles` (r:1 w:1)
	/// Proof: `XcavateWhitelist::AccountRoles` (`max_values`: None, `max_size`: Some(66), added: 2541, mode: `MaxEncodedLen`)
	fn remove_role() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `208`
		//  Estimated: `3531`
		// Minimum execution time: 15_825_000 picoseconds.
		Weight::from_parts(16_193_000, 0)
			.saturating_add(Weight::from_parts(0, 3531))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `XcavateWhitelist::AdminAccounts` (r:1 w:0)
	/// Proof: `XcavateWhitelist::AdminAccounts` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	/// Storage: `XcavateWhitelist::AccountRoles` (r:1 w:1)
	/// Proof: `XcavateWhitelist::AccountRoles` (`max_values`: None, `max_size`: Some(66), added: 2541, mode: `MaxEncodedLen`)
	fn set_permission() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `208`
		//  Estimated: `3531`
		// Minimum execution time: 16_401_000 picoseconds.
		Weight::from_parts(16_827_000, 0)
			.saturating_add(Weight::from_parts(0, 3531))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(1))
	}
}
